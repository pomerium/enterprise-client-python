#!/bin/bash
set -euo pipefail

_scripts_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
_root_dir="$(dirname "$_scripts_dir")"
_deps_dir="$_root_dir/deps"

readonly _git_deps=(
    "pomerium/pomerium|v0.25.0"
    "pomerium/pomerium-console|v0.25.0"
    'envoyproxy/protoc-gen-validate|v1.0.2'
    'envoyproxy/data-plane-api|d525ab36724d6a94477f7642e02418b50a8c4043'
    'cncf/xds|e9ce68804cb4e64cab5a52e3c8baf840d4ff87b7'
    'googleapis/googleapis|114a745b2841a044e98cdbb19358ed29fcf4a5f1'
    'census-instrumentation/opencensus-proto|v0.4.1'
    'open-telemetry/opentelemetry-proto|v1.0.0'
    'prometheus/client_model|v0.4.0'
)

function replace-in-file() {
    if [ "$(uname)" = 'Darwin' ]; then
        # for MacOS
        sed -i '' -E "$1" "$2"
    else
        # for Linux and Windows
        sed -i'' -E "$1" "$2"
    fi
}

function clone() {
    local _name="$1"
    local _tag="$2"
    local _dst="$3"

    echo "cloning $_name:$_tag to $_dst"
    if [ ! -d "$_dst" ]; then
        mkdir -p "$_dst"
        git clone "git@github.com:$_name" "$_dst"
    fi
    (
        cd "$_dst"
        git fetch
        git checkout "$_tag"
    )
}

function clone_all() {
    local _name _tag _dst
    for _dep in "${_git_deps[@]}"; do
        IFS=$'|' read -r _name _tag <<<"$_dep"
        _dst="$_deps_dir/github.com/$_name"
        clone "$_name" "$_tag" "$_dst"
    done
}

function download() {
    local _url="$1"
    local _dst="$2"

    echo "downloading $_url to $_dst"
    curl \
        --silent \
        --compressed \
        --fail \
        --location \
        --time-cond "$_dst" \
        --output "$_dst" \
        "$_url"
}

function join_by() {
    local IFS="$1"
    shift
    echo "$*"
}

clone_all

_imports=()
while read -r _proto; do
    if [[ "$_proto" == envoy/* ]]; then
        _imports+=("M${_proto}=github.com/envoyproxy/go-control-plane/$(dirname "$_proto")")
    elif [[ "$_proto" == xds/* || "$_proto" == udpa/* ]]; then
        _imports+=("M${_proto}=github.com/cncf/xds/go/$(dirname "$_proto")")
    fi
done <"$_deps_dir/github.com/pomerium/pomerium-console/scripts/proto-dependencies.txt"
_import_paths=$(join_by , "${_imports[@]}")

_proto_files=(
    activity_log.proto
    audit_svc.proto
    databroker_svc.proto
    policy.proto
    routes.proto
    settings.proto
    namespaces.proto
    users.proto
    key_chain.proto
    console_config.proto
    report.proto
    devices.proto
    external_data_sources.proto
    events.proto
    tsdb.proto
)

echo "installing python dependencies"
pip install \
    'wheel==0.37.1' \
    'protobuf==4.25.2' \
    'grpcio==1.60.0' \
    'grpcio-tools==1.60.0'

(
    cd "$_root_dir"

    echo "generating dependency protobuf code"
    python -m grpc_tools.protoc \
        -I "$_deps_dir/github.com/cncf/xds" \
        -I "$_deps_dir/github.com/googleapis/googleapis" \
        -I "$_deps_dir/github.com/envoyproxy/protoc-gen-validate" \
        -I "$_deps_dir/github.com/envoyproxy/data-plane-api" \
        -I "$_deps_dir/github.com/census-instrumentation/opencensus-proto/src" \
        -I "$_deps_dir/github.com/open-telemetry/opentelemetry-proto" \
        -I "$_deps_dir/github.com/prometheus/client_model" \
        --python_out="src" \
        $(cd deps/github.com/envoyproxy/data-plane-api && find . -regex '.*\.proto' | sed 's|^./||') \
        $(cd deps/github.com/cncf/xds && find . -regex '.*\.proto' | sed 's|^./||') \
        $(cd deps/github.com/envoyproxy/protoc-gen-validate && find . -regex '.*\.proto' | sed 's|^./||')

    echo "generating pomerium-console protobuf code"
    mkdir -p src/pomerium/pb
    python -m grpc_tools.protoc \
        -I "$_deps_dir" \
        -I "$_deps_dir/github.com/cncf/xds" \
        -I "$_deps_dir/github.com/envoyproxy/data-plane-api" \
        -I "$_deps_dir/github.com/envoyproxy/protoc-gen-validate" \
        -I "$_deps_dir/github.com/googleapis/googleapis" \
        -I "$_deps_dir/github.com/pomerium/pomerium/pkg/grpc" \
        -I "$_deps_dir/github.com/pomerium/pomerium-console/pkg/pb" \
        --python_out="src/pomerium/pb" \
        --grpc_python_out="src/pomerium/pb" \
        "${_proto_files[@]}"

    # fix package names for grpc
    for _file in src/pomerium/pb/*.py; do
        replace-in-file 's/^import ([a-z_]+)_pb2/import pomerium.pb.\1_pb2/' "$_file"
    done

    # add __init__ files
    find src -type d -exec touch __init__.py \;
    rm __init__.py
)
