"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import envoy.config.core.v3.base_pb2
import envoy.type.v3.percent_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CircuitBreakers(google.protobuf.message.Message):
    """[#protodoc-title: Circuit breakers]

    :ref:`Circuit breaking<arch_overview_circuit_break>` settings can be
    specified individually for each defined priority.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class Thresholds(google.protobuf.message.Message):
        """A Thresholds defines CircuitBreaker settings for a
        :ref:`RoutingPriority<envoy_v3_api_enum_config.core.v3.RoutingPriority>`.
        [#next-free-field: 9]
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class RetryBudget(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            BUDGET_PERCENT_FIELD_NUMBER: builtins.int
            MIN_RETRY_CONCURRENCY_FIELD_NUMBER: builtins.int
            @property
            def budget_percent(self) -> envoy.type.v3.percent_pb2.Percent:
                """Specifies the limit on concurrent retries as a percentage of the sum of active requests and
                active pending requests. For example, if there are 100 active requests and the
                budget_percent is set to 25, there may be 25 active retries.

                This parameter is optional. Defaults to 20%.
                """
                pass
            @property
            def min_retry_concurrency(self) -> google.protobuf.wrappers_pb2.UInt32Value:
                """Specifies the minimum retry concurrency allowed for the retry budget. The limit on the
                number of active retries may never go below this number.

                This parameter is optional. Defaults to 3.
                """
                pass
            def __init__(self,
                *,
                budget_percent : typing.Optional[envoy.type.v3.percent_pb2.Percent] = ...,
                min_retry_concurrency : typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal[u"budget_percent",b"budget_percent",u"min_retry_concurrency",b"min_retry_concurrency"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal[u"budget_percent",b"budget_percent",u"min_retry_concurrency",b"min_retry_concurrency"]) -> None: ...

        PRIORITY_FIELD_NUMBER: builtins.int
        MAX_CONNECTIONS_FIELD_NUMBER: builtins.int
        MAX_PENDING_REQUESTS_FIELD_NUMBER: builtins.int
        MAX_REQUESTS_FIELD_NUMBER: builtins.int
        MAX_RETRIES_FIELD_NUMBER: builtins.int
        RETRY_BUDGET_FIELD_NUMBER: builtins.int
        TRACK_REMAINING_FIELD_NUMBER: builtins.int
        MAX_CONNECTION_POOLS_FIELD_NUMBER: builtins.int
        priority: envoy.config.core.v3.base_pb2.RoutingPriority.V = ...
        """The :ref:`RoutingPriority<envoy_v3_api_enum_config.core.v3.RoutingPriority>`
        the specified CircuitBreaker settings apply to.
        """

        @property
        def max_connections(self) -> google.protobuf.wrappers_pb2.UInt32Value:
            """The maximum number of connections that Envoy will make to the upstream
            cluster. If not specified, the default is 1024.
            """
            pass
        @property
        def max_pending_requests(self) -> google.protobuf.wrappers_pb2.UInt32Value:
            """The maximum number of pending requests that Envoy will allow to the
            upstream cluster. If not specified, the default is 1024.
            This limit is applied as a connection limit for non-HTTP traffic.
            """
            pass
        @property
        def max_requests(self) -> google.protobuf.wrappers_pb2.UInt32Value:
            """The maximum number of parallel requests that Envoy will make to the
            upstream cluster. If not specified, the default is 1024.
            This limit does not apply to non-HTTP traffic.
            """
            pass
        @property
        def max_retries(self) -> google.protobuf.wrappers_pb2.UInt32Value:
            """The maximum number of parallel retries that Envoy will allow to the
            upstream cluster. If not specified, the default is 3.
            """
            pass
        @property
        def retry_budget(self) -> global___CircuitBreakers.Thresholds.RetryBudget:
            """Specifies a limit on concurrent retries in relation to the number of active requests. This
            parameter is optional.

            .. note::

               If this field is set, the retry budget will override any configured retry circuit
               breaker.
            """
            pass
        track_remaining: builtins.bool = ...
        """If track_remaining is true, then stats will be published that expose
        the number of resources remaining until the circuit breakers open. If
        not specified, the default is false.

        .. note::

           If a retry budget is used in lieu of the max_retries circuit breaker,
           the remaining retry resources remaining will not be tracked.
        """

        @property
        def max_connection_pools(self) -> google.protobuf.wrappers_pb2.UInt32Value:
            """The maximum number of connection pools per cluster that Envoy will concurrently support at
            once. If not specified, the default is unlimited. Set this for clusters which create a
            large number of connection pools. See
            :ref:`Circuit Breaking <arch_overview_circuit_break_cluster_maximum_connection_pools>` for
            more details.
            """
            pass
        def __init__(self,
            *,
            priority : envoy.config.core.v3.base_pb2.RoutingPriority.V = ...,
            max_connections : typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
            max_pending_requests : typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
            max_requests : typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
            max_retries : typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
            retry_budget : typing.Optional[global___CircuitBreakers.Thresholds.RetryBudget] = ...,
            track_remaining : builtins.bool = ...,
            max_connection_pools : typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal[u"max_connection_pools",b"max_connection_pools",u"max_connections",b"max_connections",u"max_pending_requests",b"max_pending_requests",u"max_requests",b"max_requests",u"max_retries",b"max_retries",u"retry_budget",b"retry_budget"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"max_connection_pools",b"max_connection_pools",u"max_connections",b"max_connections",u"max_pending_requests",b"max_pending_requests",u"max_requests",b"max_requests",u"max_retries",b"max_retries",u"priority",b"priority",u"retry_budget",b"retry_budget",u"track_remaining",b"track_remaining"]) -> None: ...

    THRESHOLDS_FIELD_NUMBER: builtins.int
    @property
    def thresholds(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CircuitBreakers.Thresholds]:
        """If multiple :ref:`Thresholds<envoy_v3_api_msg_config.cluster.v3.CircuitBreakers.Thresholds>`
        are defined with the same :ref:`RoutingPriority<envoy_v3_api_enum_config.core.v3.RoutingPriority>`,
        the first one in the list is used. If no Thresholds is defined for a given
        :ref:`RoutingPriority<envoy_v3_api_enum_config.core.v3.RoutingPriority>`, the default values
        are used.
        """
        pass
    def __init__(self,
        *,
        thresholds : typing.Optional[typing.Iterable[global___CircuitBreakers.Thresholds]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"thresholds",b"thresholds"]) -> None: ...
global___CircuitBreakers = CircuitBreakers
