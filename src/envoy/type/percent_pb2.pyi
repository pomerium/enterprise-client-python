"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class Percent(google.protobuf.message.Message):
    """[#protodoc-title: Percent]

    Identifies a percentage, in the range [0.0, 100.0].
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.float = ...
    def __init__(self,
        *,
        value : builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"value",b"value"]) -> None: ...
global___Percent = Percent

class FractionalPercent(google.protobuf.message.Message):
    """A fractional percentage is used in cases in which for performance reasons performing floating
    point to integer conversions during randomness calculations is undesirable. The message includes
    both a numerator and denominator that together determine the final fractional value.

    * **Example**: 1/100 = 1%.
    * **Example**: 3/10000 = 0.03%.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class DenominatorType(_DenominatorType, metaclass=_DenominatorTypeEnumTypeWrapper):
        """Fraction percentages support several fixed denominator values."""
        pass
    class _DenominatorType:
        V = typing.NewType('V', builtins.int)
    class _DenominatorTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_DenominatorType.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        HUNDRED = FractionalPercent.DenominatorType.V(0)
        """100.

        **Example**: 1/100 = 1%.
        """

        TEN_THOUSAND = FractionalPercent.DenominatorType.V(1)
        """10,000.

        **Example**: 1/10000 = 0.01%.
        """

        MILLION = FractionalPercent.DenominatorType.V(2)
        """1,000,000.

        **Example**: 1/1000000 = 0.0001%.
        """


    HUNDRED = FractionalPercent.DenominatorType.V(0)
    """100.

    **Example**: 1/100 = 1%.
    """

    TEN_THOUSAND = FractionalPercent.DenominatorType.V(1)
    """10,000.

    **Example**: 1/10000 = 0.01%.
    """

    MILLION = FractionalPercent.DenominatorType.V(2)
    """1,000,000.

    **Example**: 1/1000000 = 0.0001%.
    """


    NUMERATOR_FIELD_NUMBER: builtins.int
    DENOMINATOR_FIELD_NUMBER: builtins.int
    numerator: builtins.int = ...
    """Specifies the numerator. Defaults to 0."""

    denominator: global___FractionalPercent.DenominatorType.V = ...
    """Specifies the denominator. If the denominator specified is less than the numerator, the final
    fractional percentage is capped at 1 (100%).
    """

    def __init__(self,
        *,
        numerator : builtins.int = ...,
        denominator : global___FractionalPercent.DenominatorType.V = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"denominator",b"denominator",u"numerator",b"numerator"]) -> None: ...
global___FractionalPercent = FractionalPercent
