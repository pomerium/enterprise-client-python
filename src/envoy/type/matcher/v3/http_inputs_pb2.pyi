"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class HttpRequestHeaderMatchInput(google.protobuf.message.Message):
    """[#protodoc-title: Common HTTP Inputs]

    Match input indicates that matching should be done on a specific request header.
    The resulting input string will be all headers for the given key joined by a comma,
    e.g. if the request contains two 'foo' headers with value 'bar' and 'baz', the input
    string will be 'bar,baz'.
    [#comment:TODO(snowp): Link to unified matching docs.]
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADER_NAME_FIELD_NUMBER: builtins.int
    header_name: typing.Text = ...
    """The request header to match on."""

    def __init__(self,
        *,
        header_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"header_name",b"header_name"]) -> None: ...
global___HttpRequestHeaderMatchInput = HttpRequestHeaderMatchInput

class HttpRequestTrailerMatchInput(google.protobuf.message.Message):
    """Match input indicates that matching should be done on a specific request trailer.
    The resulting input string will be all headers for the given key joined by a comma,
    e.g. if the request contains two 'foo' headers with value 'bar' and 'baz', the input
    string will be 'bar,baz'.
    [#comment:TODO(snowp): Link to unified matching docs.]
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADER_NAME_FIELD_NUMBER: builtins.int
    header_name: typing.Text = ...
    """The request trailer to match on."""

    def __init__(self,
        *,
        header_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"header_name",b"header_name"]) -> None: ...
global___HttpRequestTrailerMatchInput = HttpRequestTrailerMatchInput

class HttpResponseHeaderMatchInput(google.protobuf.message.Message):
    """Match input indicating that matching should be done on a specific response header.
    The resulting input string will be all headers for the given key joined by a comma,
    e.g. if the response contains two 'foo' headers with value 'bar' and 'baz', the input
    string will be 'bar,baz'.
    [#comment:TODO(snowp): Link to unified matching docs.]
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADER_NAME_FIELD_NUMBER: builtins.int
    header_name: typing.Text = ...
    """The response header to match on."""

    def __init__(self,
        *,
        header_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"header_name",b"header_name"]) -> None: ...
global___HttpResponseHeaderMatchInput = HttpResponseHeaderMatchInput

class HttpResponseTrailerMatchInput(google.protobuf.message.Message):
    """Match input indicates that matching should be done on a specific response trailer.
    The resulting input string will be all headers for the given key joined by a comma,
    e.g. if the request contains two 'foo' headers with value 'bar' and 'baz', the input
    string will be 'bar,baz'.
    [#comment:TODO(snowp): Link to unified matching docs.]
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEADER_NAME_FIELD_NUMBER: builtins.int
    header_name: typing.Text = ...
    """The response trailer to match on."""

    def __init__(self,
        *,
        header_name : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"header_name",b"header_name"]) -> None: ...
global___HttpResponseTrailerMatchInput = HttpResponseTrailerMatchInput
