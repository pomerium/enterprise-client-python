"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import envoy.type.matcher.string_pb2
import envoy.type.matcher.struct_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class NodeMatcher(google.protobuf.message.Message):
    """[#protodoc-title: Node matcher]

    Specifies the way to match a Node.
    The match follows AND semantics.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    NODE_ID_FIELD_NUMBER: builtins.int
    NODE_METADATAS_FIELD_NUMBER: builtins.int
    @property
    def node_id(self) -> envoy.type.matcher.string_pb2.StringMatcher:
        """Specifies match criteria on the node id."""
        pass
    @property
    def node_metadatas(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[envoy.type.matcher.struct_pb2.StructMatcher]:
        """Specifies match criteria on the node metadata."""
        pass
    def __init__(self,
        *,
        node_id : typing.Optional[envoy.type.matcher.string_pb2.StringMatcher] = ...,
        node_metadatas : typing.Optional[typing.Iterable[envoy.type.matcher.struct_pb2.StructMatcher]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"node_id",b"node_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"node_id",b"node_id",u"node_metadatas",b"node_metadatas"]) -> None: ...
global___NodeMatcher = NodeMatcher
