"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions
import xds.core.v3.resource_locator_pb2

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class CollectionEntry(google.protobuf.message.Message):
    """xDS collection resource wrapper. This encapsulates a xDS resource when
    appearing inside a list collection resource. List collection resources are
    regular Resource messages of type:

    message <T>Collection {
      repeated CollectionEntry resources = 1;
    }
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class InlineEntry(google.protobuf.message.Message):
        """Inlined resource entry."""
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        NAME_FIELD_NUMBER: builtins.int
        VERSION_FIELD_NUMBER: builtins.int
        RESOURCE_FIELD_NUMBER: builtins.int
        name: typing.Text = ...
        """Optional name to describe the inlined resource. Resource names must
        [a-zA-Z0-9_-\./]+ (TODO(htuch): turn this into a PGV constraint once
        finalized, probably should be a RFC3986 pchar). This name allows
        reference via the #entry directive in ResourceLocator.
        """

        version: typing.Text = ...
        """The resource's logical version. It is illegal to have the same named xDS
        resource name at a given version with different resource payloads.
        """

        @property
        def resource(self) -> google.protobuf.any_pb2.Any:
            """The resource payload, including type URL."""
            pass
        def __init__(self,
            *,
            name : typing.Text = ...,
            version : typing.Text = ...,
            resource : typing.Optional[google.protobuf.any_pb2.Any] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal[u"resource",b"resource"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"name",b"name",u"resource",b"resource",u"version",b"version"]) -> None: ...

    LOCATOR_FIELD_NUMBER: builtins.int
    INLINE_ENTRY_FIELD_NUMBER: builtins.int
    @property
    def locator(self) -> xds.core.v3.resource_locator_pb2.ResourceLocator:
        """A resource locator describing how the member resource is to be located."""
        pass
    @property
    def inline_entry(self) -> global___CollectionEntry.InlineEntry:
        """The resource is inlined in the list collection."""
        pass
    def __init__(self,
        *,
        locator : typing.Optional[xds.core.v3.resource_locator_pb2.ResourceLocator] = ...,
        inline_entry : typing.Optional[global___CollectionEntry.InlineEntry] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"inline_entry",b"inline_entry",u"locator",b"locator",u"resource_specifier",b"resource_specifier"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"inline_entry",b"inline_entry",u"locator",b"locator",u"resource_specifier",b"resource_specifier"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"resource_specifier",b"resource_specifier"]) -> typing.Optional[typing_extensions.Literal["locator","inline_entry"]]: ...
global___CollectionEntry = CollectionEntry
