# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: report.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import policy_pb2
import routes_pb2
import report_pb2


class ReportBase(abc.ABC):

    @abc.abstractmethod
    async def PolicyReport(self, stream: 'grpclib.server.Stream[report_pb2.PolicyReportRequest, report_pb2.PolicyReportResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/pomerium.dashboard.Report/PolicyReport': grpclib.const.Handler(
                self.PolicyReport,
                grpclib.const.Cardinality.UNARY_UNARY,
                report_pb2.PolicyReportRequest,
                report_pb2.PolicyReportResponse,
            ),
        }


class ReportStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.PolicyReport = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.Report/PolicyReport',
            report_pb2.PolicyReportRequest,
            report_pb2.PolicyReportResponse,
        )
