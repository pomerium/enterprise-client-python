# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import devices_pb2 as devices__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class DeviceServiceStub(object):
    """DeviceService manages device credentials, enrollments and types
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ApproveDevice = channel.unary_unary(
                '/pomerium.dashboard.DeviceService/ApproveDevice',
                request_serializer=devices__pb2.ApproveDeviceRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.CreateDeviceEnrollment = channel.unary_unary(
                '/pomerium.dashboard.DeviceService/CreateDeviceEnrollment',
                request_serializer=devices__pb2.CreateDeviceEnrollmentRequest.SerializeToString,
                response_deserializer=devices__pb2.CreateDeviceEnrollmentResponse.FromString,
                )
        self.SetDeviceType = channel.unary_unary(
                '/pomerium.dashboard.DeviceService/SetDeviceType',
                request_serializer=devices__pb2.SetDeviceTypeRequest.SerializeToString,
                response_deserializer=devices__pb2.SetDeviceTypeResponse.FromString,
                )
        self.DeleteDevice = channel.unary_unary(
                '/pomerium.dashboard.DeviceService/DeleteDevice',
                request_serializer=devices__pb2.DeleteDeviceRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteDeviceType = channel.unary_unary(
                '/pomerium.dashboard.DeviceService/DeleteDeviceType',
                request_serializer=devices__pb2.DeleteDeviceTypeRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListDevices = channel.unary_unary(
                '/pomerium.dashboard.DeviceService/ListDevices',
                request_serializer=devices__pb2.ListDevicesRequest.SerializeToString,
                response_deserializer=devices__pb2.ListDevicesResponse.FromString,
                )
        self.ListDeviceTypes = channel.unary_unary(
                '/pomerium.dashboard.DeviceService/ListDeviceTypes',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=devices__pb2.ListDeviceTypesResponse.FromString,
                )


class DeviceServiceServicer(object):
    """DeviceService manages device credentials, enrollments and types
    """

    def ApproveDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDeviceEnrollment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDeviceType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDevice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDeviceType(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDevices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDeviceTypes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeviceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ApproveDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.ApproveDevice,
                    request_deserializer=devices__pb2.ApproveDeviceRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CreateDeviceEnrollment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDeviceEnrollment,
                    request_deserializer=devices__pb2.CreateDeviceEnrollmentRequest.FromString,
                    response_serializer=devices__pb2.CreateDeviceEnrollmentResponse.SerializeToString,
            ),
            'SetDeviceType': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDeviceType,
                    request_deserializer=devices__pb2.SetDeviceTypeRequest.FromString,
                    response_serializer=devices__pb2.SetDeviceTypeResponse.SerializeToString,
            ),
            'DeleteDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDevice,
                    request_deserializer=devices__pb2.DeleteDeviceRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteDeviceType': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDeviceType,
                    request_deserializer=devices__pb2.DeleteDeviceTypeRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDevices,
                    request_deserializer=devices__pb2.ListDevicesRequest.FromString,
                    response_serializer=devices__pb2.ListDevicesResponse.SerializeToString,
            ),
            'ListDeviceTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDeviceTypes,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=devices__pb2.ListDeviceTypesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pomerium.dashboard.DeviceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeviceService(object):
    """DeviceService manages device credentials, enrollments and types
    """

    @staticmethod
    def ApproveDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pomerium.dashboard.DeviceService/ApproveDevice',
            devices__pb2.ApproveDeviceRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDeviceEnrollment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pomerium.dashboard.DeviceService/CreateDeviceEnrollment',
            devices__pb2.CreateDeviceEnrollmentRequest.SerializeToString,
            devices__pb2.CreateDeviceEnrollmentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDeviceType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pomerium.dashboard.DeviceService/SetDeviceType',
            devices__pb2.SetDeviceTypeRequest.SerializeToString,
            devices__pb2.SetDeviceTypeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pomerium.dashboard.DeviceService/DeleteDevice',
            devices__pb2.DeleteDeviceRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDeviceType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pomerium.dashboard.DeviceService/DeleteDeviceType',
            devices__pb2.DeleteDeviceTypeRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pomerium.dashboard.DeviceService/ListDevices',
            devices__pb2.ListDevicesRequest.SerializeToString,
            devices__pb2.ListDevicesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDeviceTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pomerium.dashboard.DeviceService/ListDeviceTypes',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            devices__pb2.ListDeviceTypesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
