"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.timestamp_pb2
import namespaces_pb2
import settings_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Cluster(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    MODIFIED_AT_FIELD_NUMBER: builtins.int
    DELETED_AT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DATABROKER_SERVICE_URL_FIELD_NUMBER: builtins.int
    SHARED_SECRET_FIELD_NUMBER: builtins.int
    INSECURE_SKIP_VERIFY_FIELD_NUMBER: builtins.int
    OVERRIDE_CERTIFICATE_NAME_FIELD_NUMBER: builtins.int
    CERTIFICATE_AUTHORITY_FIELD_NUMBER: builtins.int
    CERTIFICATE_AUTHORITY_FILE_FIELD_NUMBER: builtins.int
    ORIGINATOR_ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    name: builtins.str
    databroker_service_url: builtins.str
    shared_secret: builtins.bytes
    insecure_skip_verify: builtins.bool
    override_certificate_name: builtins.str
    certificate_authority: builtins.bytes
    certificate_authority_file: builtins.str
    originator_id: builtins.str
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def modified_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def deleted_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        modified_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        deleted_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        name: builtins.str = ...,
        databroker_service_url: builtins.str = ...,
        shared_secret: builtins.bytes = ...,
        insecure_skip_verify: builtins.bool | None = ...,
        override_certificate_name: builtins.str | None = ...,
        certificate_authority: builtins.bytes | None = ...,
        certificate_authority_file: builtins.str | None = ...,
        originator_id: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_certificate_authority", b"_certificate_authority", "_certificate_authority_file", b"_certificate_authority_file", "_insecure_skip_verify", b"_insecure_skip_verify", "_override_certificate_name", b"_override_certificate_name", "certificate_authority", b"certificate_authority", "certificate_authority_file", b"certificate_authority_file", "created_at", b"created_at", "deleted_at", b"deleted_at", "insecure_skip_verify", b"insecure_skip_verify", "modified_at", b"modified_at", "override_certificate_name", b"override_certificate_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_certificate_authority", b"_certificate_authority", "_certificate_authority_file", b"_certificate_authority_file", "_insecure_skip_verify", b"_insecure_skip_verify", "_override_certificate_name", b"_override_certificate_name", "certificate_authority", b"certificate_authority", "certificate_authority_file", b"certificate_authority_file", "created_at", b"created_at", "databroker_service_url", b"databroker_service_url", "deleted_at", b"deleted_at", "id", b"id", "insecure_skip_verify", b"insecure_skip_verify", "modified_at", b"modified_at", "name", b"name", "originator_id", b"originator_id", "override_certificate_name", b"override_certificate_name", "shared_secret", b"shared_secret"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_certificate_authority", b"_certificate_authority"]) -> typing.Literal["certificate_authority"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_certificate_authority_file", b"_certificate_authority_file"]) -> typing.Literal["certificate_authority_file"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_insecure_skip_verify", b"_insecure_skip_verify"]) -> typing.Literal["insecure_skip_verify"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_override_certificate_name", b"_override_certificate_name"]) -> typing.Literal["override_certificate_name"] | None: ...

global___Cluster = Cluster

@typing.final
class AddClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PARENT_NAMESPACE_ID_FIELD_NUMBER: builtins.int
    CLUSTER_FIELD_NUMBER: builtins.int
    parent_namespace_id: builtins.str
    @property
    def cluster(self) -> global___Cluster: ...
    def __init__(
        self,
        *,
        parent_namespace_id: builtins.str = ...,
        cluster: global___Cluster | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["cluster", b"cluster"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["cluster", b"cluster", "parent_namespace_id", b"parent_namespace_id"]) -> None: ...

global___AddClusterRequest = AddClusterRequest

@typing.final
class AddClusterResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLUSTER_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    SETTINGS_FIELD_NUMBER: builtins.int
    @property
    def cluster(self) -> global___Cluster: ...
    @property
    def namespace(self) -> namespaces_pb2.Namespace: ...
    @property
    def settings(self) -> settings_pb2.Settings: ...
    def __init__(
        self,
        *,
        cluster: global___Cluster | None = ...,
        namespace: namespaces_pb2.Namespace | None = ...,
        settings: settings_pb2.Settings | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["cluster", b"cluster", "namespace", b"namespace", "settings", b"settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["cluster", b"cluster", "namespace", b"namespace", "settings", b"settings"]) -> None: ...

global___AddClusterResponse = AddClusterResponse

@typing.final
class DeleteClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___DeleteClusterRequest = DeleteClusterRequest

@typing.final
class DeleteClusterResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeleteClusterResponse = DeleteClusterResponse

@typing.final
class GetClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___GetClusterRequest = GetClusterRequest

@typing.final
class GetClusterResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLUSTER_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    SETTINGS_FIELD_NUMBER: builtins.int
    @property
    def cluster(self) -> global___Cluster: ...
    @property
    def namespace(self) -> namespaces_pb2.Namespace: ...
    @property
    def settings(self) -> settings_pb2.Settings: ...
    def __init__(
        self,
        *,
        cluster: global___Cluster | None = ...,
        namespace: namespaces_pb2.Namespace | None = ...,
        settings: settings_pb2.Settings | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["cluster", b"cluster", "namespace", b"namespace", "settings", b"settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["cluster", b"cluster", "namespace", b"namespace", "settings", b"settings"]) -> None: ...

global___GetClusterResponse = GetClusterResponse

@typing.final
class ListClustersRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ListClustersRequest = ListClustersRequest

@typing.final
class ListClustersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLUSTERS_FIELD_NUMBER: builtins.int
    @property
    def clusters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Cluster]: ...
    def __init__(
        self,
        *,
        clusters: collections.abc.Iterable[global___Cluster] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["clusters", b"clusters"]) -> None: ...

global___ListClustersResponse = ListClustersResponse

@typing.final
class UpdateClusterRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLUSTER_FIELD_NUMBER: builtins.int
    @property
    def cluster(self) -> global___Cluster: ...
    def __init__(
        self,
        *,
        cluster: global___Cluster | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["cluster", b"cluster"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["cluster", b"cluster"]) -> None: ...

global___UpdateClusterRequest = UpdateClusterRequest

@typing.final
class UpdateClusterResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLUSTER_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    SETTINGS_FIELD_NUMBER: builtins.int
    @property
    def cluster(self) -> global___Cluster: ...
    @property
    def namespace(self) -> namespaces_pb2.Namespace: ...
    @property
    def settings(self) -> settings_pb2.Settings: ...
    def __init__(
        self,
        *,
        cluster: global___Cluster | None = ...,
        namespace: namespaces_pb2.Namespace | None = ...,
        settings: settings_pb2.Settings | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["cluster", b"cluster", "namespace", b"namespace", "settings", b"settings"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["cluster", b"cluster", "namespace", b"namespace", "settings", b"settings"]) -> None: ...

global___UpdateClusterResponse = UpdateClusterResponse
