# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: users.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.timestamp_pb2
import google.protobuf.struct_pb2
import users_pb2


class UserServiceBase(abc.ABC):

    @abc.abstractmethod
    async def GetUserInfo(self, stream: 'grpclib.server.Stream[users_pb2.GetUserInfoRequest, users_pb2.GetUserInfoResponse]') -> None:
        pass

    @abc.abstractmethod
    async def QueryGroups(self, stream: 'grpclib.server.Stream[users_pb2.QueryGroupsRequest, users_pb2.QueryGroupsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def QueryUsers(self, stream: 'grpclib.server.Stream[users_pb2.QueryUsersRequest, users_pb2.QueryUsersResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/pomerium.dashboard.UserService/GetUserInfo': grpclib.const.Handler(
                self.GetUserInfo,
                grpclib.const.Cardinality.UNARY_UNARY,
                users_pb2.GetUserInfoRequest,
                users_pb2.GetUserInfoResponse,
            ),
            '/pomerium.dashboard.UserService/QueryGroups': grpclib.const.Handler(
                self.QueryGroups,
                grpclib.const.Cardinality.UNARY_UNARY,
                users_pb2.QueryGroupsRequest,
                users_pb2.QueryGroupsResponse,
            ),
            '/pomerium.dashboard.UserService/QueryUsers': grpclib.const.Handler(
                self.QueryUsers,
                grpclib.const.Cardinality.UNARY_UNARY,
                users_pb2.QueryUsersRequest,
                users_pb2.QueryUsersResponse,
            ),
        }


class UserServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetUserInfo = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.UserService/GetUserInfo',
            users_pb2.GetUserInfoRequest,
            users_pb2.GetUserInfoResponse,
        )
        self.QueryGroups = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.UserService/QueryGroups',
            users_pb2.QueryGroupsRequest,
            users_pb2.QueryGroupsResponse,
        )
        self.QueryUsers = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.UserService/QueryUsers',
            users_pb2.QueryUsersRequest,
            users_pb2.QueryUsersResponse,
        )


class PomeriumServiceAccountServiceBase(abc.ABC):

    @abc.abstractmethod
    async def AddPomeriumServiceAccount(self, stream: 'grpclib.server.Stream[users_pb2.AddPomeriumServiceAccountRequest, users_pb2.AddPomeriumServiceAccountResponse]') -> None:
        pass

    @abc.abstractmethod
    async def DeletePomeriumServiceAccount(self, stream: 'grpclib.server.Stream[users_pb2.DeletePomeriumServiceAccountRequest, users_pb2.DeletePomeriumServiceAccountResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetPomeriumServiceAccount(self, stream: 'grpclib.server.Stream[users_pb2.GetPomeriumServiceAccountRequest, users_pb2.GetPomeriumServiceAccountResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ListPomeriumServiceAccounts(self, stream: 'grpclib.server.Stream[users_pb2.ListPomeriumServiceAccountsRequest, users_pb2.ListPomeriumServiceAccountsResponse]') -> None:
        pass

    @abc.abstractmethod
    async def SetPomeriumServiceAccount(self, stream: 'grpclib.server.Stream[users_pb2.SetPomeriumServiceAccountRequest, users_pb2.SetPomeriumServiceAccountResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/pomerium.dashboard.PomeriumServiceAccountService/AddPomeriumServiceAccount': grpclib.const.Handler(
                self.AddPomeriumServiceAccount,
                grpclib.const.Cardinality.UNARY_UNARY,
                users_pb2.AddPomeriumServiceAccountRequest,
                users_pb2.AddPomeriumServiceAccountResponse,
            ),
            '/pomerium.dashboard.PomeriumServiceAccountService/DeletePomeriumServiceAccount': grpclib.const.Handler(
                self.DeletePomeriumServiceAccount,
                grpclib.const.Cardinality.UNARY_UNARY,
                users_pb2.DeletePomeriumServiceAccountRequest,
                users_pb2.DeletePomeriumServiceAccountResponse,
            ),
            '/pomerium.dashboard.PomeriumServiceAccountService/GetPomeriumServiceAccount': grpclib.const.Handler(
                self.GetPomeriumServiceAccount,
                grpclib.const.Cardinality.UNARY_UNARY,
                users_pb2.GetPomeriumServiceAccountRequest,
                users_pb2.GetPomeriumServiceAccountResponse,
            ),
            '/pomerium.dashboard.PomeriumServiceAccountService/ListPomeriumServiceAccounts': grpclib.const.Handler(
                self.ListPomeriumServiceAccounts,
                grpclib.const.Cardinality.UNARY_UNARY,
                users_pb2.ListPomeriumServiceAccountsRequest,
                users_pb2.ListPomeriumServiceAccountsResponse,
            ),
            '/pomerium.dashboard.PomeriumServiceAccountService/SetPomeriumServiceAccount': grpclib.const.Handler(
                self.SetPomeriumServiceAccount,
                grpclib.const.Cardinality.UNARY_UNARY,
                users_pb2.SetPomeriumServiceAccountRequest,
                users_pb2.SetPomeriumServiceAccountResponse,
            ),
        }


class PomeriumServiceAccountServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.AddPomeriumServiceAccount = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.PomeriumServiceAccountService/AddPomeriumServiceAccount',
            users_pb2.AddPomeriumServiceAccountRequest,
            users_pb2.AddPomeriumServiceAccountResponse,
        )
        self.DeletePomeriumServiceAccount = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.PomeriumServiceAccountService/DeletePomeriumServiceAccount',
            users_pb2.DeletePomeriumServiceAccountRequest,
            users_pb2.DeletePomeriumServiceAccountResponse,
        )
        self.GetPomeriumServiceAccount = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.PomeriumServiceAccountService/GetPomeriumServiceAccount',
            users_pb2.GetPomeriumServiceAccountRequest,
            users_pb2.GetPomeriumServiceAccountResponse,
        )
        self.ListPomeriumServiceAccounts = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.PomeriumServiceAccountService/ListPomeriumServiceAccounts',
            users_pb2.ListPomeriumServiceAccountsRequest,
            users_pb2.ListPomeriumServiceAccountsResponse,
        )
        self.SetPomeriumServiceAccount = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.PomeriumServiceAccountService/SetPomeriumServiceAccount',
            users_pb2.SetPomeriumServiceAccountRequest,
            users_pb2.SetPomeriumServiceAccountResponse,
        )


class PomeriumSessionServiceBase(abc.ABC):

    @abc.abstractmethod
    async def DeletePomeriumSession(self, stream: 'grpclib.server.Stream[users_pb2.DeletePomeriumSessionRequest, users_pb2.DeletePomeriumSessionResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetPomeriumSession(self, stream: 'grpclib.server.Stream[users_pb2.GetPomeriumSessionRequest, users_pb2.GetPomeriumSessionResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Impersonate(self, stream: 'grpclib.server.Stream[users_pb2.ImpersonateRequest, users_pb2.ImpersonateResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ListPomeriumSessions(self, stream: 'grpclib.server.Stream[users_pb2.ListPomeriumSessionsRequest, users_pb2.ListPomeriumSessionsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/pomerium.dashboard.PomeriumSessionService/DeletePomeriumSession': grpclib.const.Handler(
                self.DeletePomeriumSession,
                grpclib.const.Cardinality.UNARY_UNARY,
                users_pb2.DeletePomeriumSessionRequest,
                users_pb2.DeletePomeriumSessionResponse,
            ),
            '/pomerium.dashboard.PomeriumSessionService/GetPomeriumSession': grpclib.const.Handler(
                self.GetPomeriumSession,
                grpclib.const.Cardinality.UNARY_UNARY,
                users_pb2.GetPomeriumSessionRequest,
                users_pb2.GetPomeriumSessionResponse,
            ),
            '/pomerium.dashboard.PomeriumSessionService/Impersonate': grpclib.const.Handler(
                self.Impersonate,
                grpclib.const.Cardinality.UNARY_UNARY,
                users_pb2.ImpersonateRequest,
                users_pb2.ImpersonateResponse,
            ),
            '/pomerium.dashboard.PomeriumSessionService/ListPomeriumSessions': grpclib.const.Handler(
                self.ListPomeriumSessions,
                grpclib.const.Cardinality.UNARY_UNARY,
                users_pb2.ListPomeriumSessionsRequest,
                users_pb2.ListPomeriumSessionsResponse,
            ),
        }


class PomeriumSessionServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.DeletePomeriumSession = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.PomeriumSessionService/DeletePomeriumSession',
            users_pb2.DeletePomeriumSessionRequest,
            users_pb2.DeletePomeriumSessionResponse,
        )
        self.GetPomeriumSession = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.PomeriumSessionService/GetPomeriumSession',
            users_pb2.GetPomeriumSessionRequest,
            users_pb2.GetPomeriumSessionResponse,
        )
        self.Impersonate = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.PomeriumSessionService/Impersonate',
            users_pb2.ImpersonateRequest,
            users_pb2.ImpersonateResponse,
        )
        self.ListPomeriumSessions = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.PomeriumSessionService/ListPomeriumSessions',
            users_pb2.ListPomeriumSessionsRequest,
            users_pb2.ListPomeriumSessionsResponse,
        )
