"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import external_data_sources_pb2
import google.protobuf.empty_pb2
import grpc
import grpc.aio
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class ExternalDataSourceServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    DeleteExternalDataSource: grpc.UnaryUnaryMultiCallable[
        external_data_sources_pb2.DeleteExternalDataSourceRequest,
        google.protobuf.empty_pb2.Empty,
    ]

    GetExternalDataSource: grpc.UnaryUnaryMultiCallable[
        external_data_sources_pb2.GetExternalDataSourceRequest,
        external_data_sources_pb2.GetExternalDataSourceResponse,
    ]

    ListExternalDataSources: grpc.UnaryUnaryMultiCallable[
        external_data_sources_pb2.ListExternalDataSourcesRequest,
        external_data_sources_pb2.ListExternalDataSourcesResponse,
    ]

    ListExternalDataSourceRecordTypes: grpc.UnaryUnaryMultiCallable[
        external_data_sources_pb2.ListExternalDataSourceRecordTypesRequest,
        external_data_sources_pb2.ListExternalDataSourceRecordTypesResponse,
    ]

    ListExternalDataSourceRecordFields: grpc.UnaryUnaryMultiCallable[
        external_data_sources_pb2.ListExternalDataSourceRecordFieldsRequest,
        external_data_sources_pb2.ListExternalDataSourceRecordFieldsResponse,
    ]

    SetExternalDataSource: grpc.UnaryUnaryMultiCallable[
        external_data_sources_pb2.SetExternalDataSourceRequest,
        external_data_sources_pb2.SetExternalDataSourceResponse,
    ]

class ExternalDataSourceServiceAsyncStub:
    DeleteExternalDataSource: grpc.aio.UnaryUnaryMultiCallable[
        external_data_sources_pb2.DeleteExternalDataSourceRequest,
        google.protobuf.empty_pb2.Empty,
    ]

    GetExternalDataSource: grpc.aio.UnaryUnaryMultiCallable[
        external_data_sources_pb2.GetExternalDataSourceRequest,
        external_data_sources_pb2.GetExternalDataSourceResponse,
    ]

    ListExternalDataSources: grpc.aio.UnaryUnaryMultiCallable[
        external_data_sources_pb2.ListExternalDataSourcesRequest,
        external_data_sources_pb2.ListExternalDataSourcesResponse,
    ]

    ListExternalDataSourceRecordTypes: grpc.aio.UnaryUnaryMultiCallable[
        external_data_sources_pb2.ListExternalDataSourceRecordTypesRequest,
        external_data_sources_pb2.ListExternalDataSourceRecordTypesResponse,
    ]

    ListExternalDataSourceRecordFields: grpc.aio.UnaryUnaryMultiCallable[
        external_data_sources_pb2.ListExternalDataSourceRecordFieldsRequest,
        external_data_sources_pb2.ListExternalDataSourceRecordFieldsResponse,
    ]

    SetExternalDataSource: grpc.aio.UnaryUnaryMultiCallable[
        external_data_sources_pb2.SetExternalDataSourceRequest,
        external_data_sources_pb2.SetExternalDataSourceResponse,
    ]

class ExternalDataSourceServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def DeleteExternalDataSource(
        self,
        request: external_data_sources_pb2.DeleteExternalDataSourceRequest,
        context: _ServicerContext,
    ) -> typing.Union[google.protobuf.empty_pb2.Empty, collections.abc.Awaitable[google.protobuf.empty_pb2.Empty]]: ...

    @abc.abstractmethod
    def GetExternalDataSource(
        self,
        request: external_data_sources_pb2.GetExternalDataSourceRequest,
        context: _ServicerContext,
    ) -> typing.Union[external_data_sources_pb2.GetExternalDataSourceResponse, collections.abc.Awaitable[external_data_sources_pb2.GetExternalDataSourceResponse]]: ...

    @abc.abstractmethod
    def ListExternalDataSources(
        self,
        request: external_data_sources_pb2.ListExternalDataSourcesRequest,
        context: _ServicerContext,
    ) -> typing.Union[external_data_sources_pb2.ListExternalDataSourcesResponse, collections.abc.Awaitable[external_data_sources_pb2.ListExternalDataSourcesResponse]]: ...

    @abc.abstractmethod
    def ListExternalDataSourceRecordTypes(
        self,
        request: external_data_sources_pb2.ListExternalDataSourceRecordTypesRequest,
        context: _ServicerContext,
    ) -> typing.Union[external_data_sources_pb2.ListExternalDataSourceRecordTypesResponse, collections.abc.Awaitable[external_data_sources_pb2.ListExternalDataSourceRecordTypesResponse]]: ...

    @abc.abstractmethod
    def ListExternalDataSourceRecordFields(
        self,
        request: external_data_sources_pb2.ListExternalDataSourceRecordFieldsRequest,
        context: _ServicerContext,
    ) -> typing.Union[external_data_sources_pb2.ListExternalDataSourceRecordFieldsResponse, collections.abc.Awaitable[external_data_sources_pb2.ListExternalDataSourceRecordFieldsResponse]]: ...

    @abc.abstractmethod
    def SetExternalDataSource(
        self,
        request: external_data_sources_pb2.SetExternalDataSourceRequest,
        context: _ServicerContext,
    ) -> typing.Union[external_data_sources_pb2.SetExternalDataSourceResponse, collections.abc.Awaitable[external_data_sources_pb2.SetExternalDataSourceResponse]]: ...

def add_ExternalDataSourceServiceServicer_to_server(servicer: ExternalDataSourceServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
