# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: routes.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.duration_pb2
import google.protobuf.timestamp_pb2
import envoy.config.cluster.v3.cluster_pb2
import envoy.config.route.v3.route_components_pb2
import policy_pb2
import routes_pb2


class RouteServiceBase(abc.ABC):

    @abc.abstractmethod
    async def DeleteRoute(self, stream: 'grpclib.server.Stream[routes_pb2.DeleteRouteRequest, routes_pb2.DeleteRouteResponse]') -> None:
        pass

    @abc.abstractmethod
    async def GetRoute(self, stream: 'grpclib.server.Stream[routes_pb2.GetRouteRequest, routes_pb2.GetRouteResponse]') -> None:
        pass

    @abc.abstractmethod
    async def ListRoutes(self, stream: 'grpclib.server.Stream[routes_pb2.ListRoutesRequest, routes_pb2.ListRoutesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def LoadRoutes(self, stream: 'grpclib.server.Stream[routes_pb2.LoadRoutesRequest, routes_pb2.LoadRoutesResponse]') -> None:
        pass

    @abc.abstractmethod
    async def SetRoute(self, stream: 'grpclib.server.Stream[routes_pb2.SetRouteRequest, routes_pb2.SetRouteResponse]') -> None:
        pass

    @abc.abstractmethod
    async def MoveRoutes(self, stream: 'grpclib.server.Stream[routes_pb2.MoveRoutesRequest, routes_pb2.MoveRoutesResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/pomerium.dashboard.RouteService/DeleteRoute': grpclib.const.Handler(
                self.DeleteRoute,
                grpclib.const.Cardinality.UNARY_UNARY,
                routes_pb2.DeleteRouteRequest,
                routes_pb2.DeleteRouteResponse,
            ),
            '/pomerium.dashboard.RouteService/GetRoute': grpclib.const.Handler(
                self.GetRoute,
                grpclib.const.Cardinality.UNARY_UNARY,
                routes_pb2.GetRouteRequest,
                routes_pb2.GetRouteResponse,
            ),
            '/pomerium.dashboard.RouteService/ListRoutes': grpclib.const.Handler(
                self.ListRoutes,
                grpclib.const.Cardinality.UNARY_UNARY,
                routes_pb2.ListRoutesRequest,
                routes_pb2.ListRoutesResponse,
            ),
            '/pomerium.dashboard.RouteService/LoadRoutes': grpclib.const.Handler(
                self.LoadRoutes,
                grpclib.const.Cardinality.UNARY_UNARY,
                routes_pb2.LoadRoutesRequest,
                routes_pb2.LoadRoutesResponse,
            ),
            '/pomerium.dashboard.RouteService/SetRoute': grpclib.const.Handler(
                self.SetRoute,
                grpclib.const.Cardinality.UNARY_UNARY,
                routes_pb2.SetRouteRequest,
                routes_pb2.SetRouteResponse,
            ),
            '/pomerium.dashboard.RouteService/MoveRoutes': grpclib.const.Handler(
                self.MoveRoutes,
                grpclib.const.Cardinality.UNARY_UNARY,
                routes_pb2.MoveRoutesRequest,
                routes_pb2.MoveRoutesResponse,
            ),
        }


class RouteServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.DeleteRoute = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.RouteService/DeleteRoute',
            routes_pb2.DeleteRouteRequest,
            routes_pb2.DeleteRouteResponse,
        )
        self.GetRoute = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.RouteService/GetRoute',
            routes_pb2.GetRouteRequest,
            routes_pb2.GetRouteResponse,
        )
        self.ListRoutes = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.RouteService/ListRoutes',
            routes_pb2.ListRoutesRequest,
            routes_pb2.ListRoutesResponse,
        )
        self.LoadRoutes = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.RouteService/LoadRoutes',
            routes_pb2.LoadRoutesRequest,
            routes_pb2.LoadRoutesResponse,
        )
        self.SetRoute = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.RouteService/SetRoute',
            routes_pb2.SetRouteRequest,
            routes_pb2.SetRouteResponse,
        )
        self.MoveRoutes = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.RouteService/MoveRoutes',
            routes_pb2.MoveRoutesRequest,
            routes_pb2.MoveRoutesResponse,
        )
