# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: key_chain.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0fkey_chain.proto\x12\x12pomerium.dashboard\x1a\x1fgoogle/protobuf/timestamp.proto\"\xbc\x01\n\x07KeyPair\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x14\n\x0cnamespace_id\x18\x03 \x01(\t\x12.\n\ncreated_at\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\x0bmodified_at\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x13\n\x0b\x63\x65rtificate\x18\x07 \x01(\x0c\x12\x0b\n\x03key\x18\x08 \x01(\x0c\"\x8a\x02\n\x08KeyUsage\x12\x19\n\x11\x64igital_signature\x18\x01 \x01(\x08\x12\x1a\n\x12\x63ontent_commitment\x18\x02 \x01(\x08\x12\x18\n\x10key_encipherment\x18\x03 \x01(\x08\x12\x19\n\x11\x64\x61ta_encipherment\x18\x04 \x01(\x08\x12\x15\n\rkey_agreement\x18\x05 \x01(\x08\x12\x11\n\tcert_sign\x18\x06 \x01(\x08\x12\x10\n\x08\x63rl_sign\x18\x07 \x01(\x08\x12\x15\n\rencipher_only\x18\x08 \x01(\x08\x12\x15\n\rdecipher_only\x18\t \x01(\x08\x12\x13\n\x0bserver_auth\x18\n \x01(\x08\x12\x13\n\x0b\x63lient_auth\x18\x0b \x01(\x08\"\xc7\x01\n\x04Name\x12\x0f\n\x07\x63ountry\x18\x01 \x03(\t\x12\x14\n\x0corganization\x18\x02 \x03(\t\x12\x1b\n\x13organizational_unit\x18\x03 \x03(\t\x12\x10\n\x08locality\x18\x04 \x03(\t\x12\x10\n\x08province\x18\x05 \x03(\t\x12\x16\n\x0estreet_address\x18\x06 \x03(\t\x12\x13\n\x0bpostal_code\x18\x07 \x03(\t\x12\x15\n\rserial_number\x18\x08 \x01(\t\x12\x13\n\x0b\x63ommon_name\x18\t \x01(\t\"\x87\x05\n\x0f\x43\x65rtificateInfo\x12\x0f\n\x07version\x18\x01 \x01(\x03\x12\x0e\n\x06serial\x18\x02 \x01(\t\x12(\n\x06issuer\x18\x03 \x01(\x0b\x32\x18.pomerium.dashboard.Name\x12)\n\x07subject\x18\x04 \x01(\x0b\x32\x18.pomerium.dashboard.Name\x12.\n\nnot_before\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12-\n\tnot_after\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\tkey_usage\x18\x07 \x01(\x0b\x32\x1c.pomerium.dashboard.KeyUsage\x12\x11\n\tdns_names\x18\n \x03(\t\x12\x17\n\x0f\x65mail_addresses\x18\x0b \x03(\t\x12\x14\n\x0cip_addresses\x18\x0c \x03(\t\x12\x0c\n\x04uris\x18\r \x03(\t\x12&\n\x1epermitted_dns_domains_critical\x18\x0e \x01(\x08\x12\x1d\n\x15permitted_dns_domains\x18\x0f \x03(\t\x12\x1c\n\x14\x65xcluded_dns_domains\x18\x10 \x03(\t\x12\x1b\n\x13permitted_ip_ranges\x18\x11 \x03(\t\x12\x1a\n\x12\x65xcluded_ip_ranges\x18\x12 \x03(\t\x12!\n\x19permitted_email_addresses\x18\x13 \x03(\t\x12 \n\x18\x65xcluded_email_addresses\x18\x14 \x03(\t\x12\x1d\n\x15permitted_uri_domains\x18\x15 \x03(\t\x12\x1c\n\x14\x65xcluded_uri_domains\x18\x16 \x03(\t\"\xf1\x01\n\rKeyPairRecord\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x14\n\x0cnamespace_id\x18\x03 \x01(\t\x12.\n\ncreated_at\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\x0bmodified_at\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x36\n\tcert_info\x18\x07 \x01(\x0b\x32#.pomerium.dashboard.CertificateInfo\x12\x17\n\x0fhas_private_key\x18\x08 \x01(\x08\"\"\n\x14\x44\x65leteKeyPairRequest\x12\n\n\x02id\x18\x01 \x01(\t\"\x17\n\x15\x44\x65leteKeyPairResponse\"\x1f\n\x11GetKeyPairRequest\x12\n\n\x02id\x18\x01 \x01(\t\"I\n\x12GetKeyPairResponse\x12\x33\n\x08key_pair\x18\x01 \x01(\x0b\x32!.pomerium.dashboard.KeyPairRecord\"\xcb\x01\n\x13ListKeyPairsRequest\x12\x14\n\x0cnamespace_id\x18\x01 \x01(\t\x12\x12\n\x05query\x18\x02 \x01(\tH\x00\x88\x01\x01\x12\x13\n\x06offset\x18\x03 \x01(\x03H\x01\x88\x01\x01\x12\x12\n\x05limit\x18\x04 \x01(\x03H\x02\x88\x01\x01\x12\x15\n\x08order_by\x18\x05 \x01(\tH\x03\x88\x01\x01\x12\x13\n\x06\x64omain\x18\x06 \x01(\tH\x04\x88\x01\x01\x42\x08\n\x06_queryB\t\n\x07_offsetB\x08\n\x06_limitB\x0b\n\t_order_byB\t\n\x07_domain\"a\n\x14ListKeyPairsResponse\x12\x34\n\tkey_pairs\x18\x01 \x03(\x0b\x32!.pomerium.dashboard.KeyPairRecord\x12\x13\n\x0btotal_count\x18\x02 \x01(\x03\"\x88\x01\n\x14\x43reateKeyPairRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x14\n\x0cnamespace_id\x18\x02 \x01(\t\x12*\n\x06\x66ormat\x18\x03 \x01(\x0e\x32\x1a.pomerium.dashboard.Format\x12\x13\n\x0b\x63\x65rtificate\x18\x04 \x01(\x0c\x12\x0b\n\x03key\x18\x05 \x01(\x0c\"L\n\x15\x43reateKeyPairResponse\x12\x33\n\x08key_pair\x18\x01 \x01(\x0b\x32!.pomerium.dashboard.KeyPairRecord\"p\n\x14UpdateKeyPairRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12*\n\x06\x66ormat\x18\x03 \x01(\x0e\x32\x1a.pomerium.dashboard.Format\x12\x13\n\x0b\x63\x65rtificate\x18\x04 \x01(\x0c\x12\x0b\n\x03key\x18\x05 \x01(\x0c\"L\n\x15UpdateKeyPairResponse\x12\x33\n\x08key_pair\x18\x01 \x01(\x0b\x32!.pomerium.dashboard.KeyPairRecord*Z\n\x12PublicKeyAlgorithm\x12\x1a\n\x16PKA_UNKNOWN_DO_NOT_USE\x10\x00\x12\x07\n\x03RSA\x10\x01\x12\x07\n\x03\x44SA\x10\x02\x12\t\n\x05\x45\x43\x44SA\x10\x03\x12\x0b\n\x07\x45\x44\x32\x35\x35\x31\x39\x10\x04*2\n\x06\x46ormat\x12\x1f\n\x1b\x46ORMAT_UNDEFINED_DO_NOT_USE\x10\x00\x12\x07\n\x03PEM\x10\x01\x32\x83\x04\n\x0fKeyChainService\x12\x64\n\rDeleteKeyPair\x12(.pomerium.dashboard.DeleteKeyPairRequest\x1a).pomerium.dashboard.DeleteKeyPairResponse\x12[\n\nGetKeyPair\x12%.pomerium.dashboard.GetKeyPairRequest\x1a&.pomerium.dashboard.GetKeyPairResponse\x12\x61\n\x0cListKeyPairs\x12\'.pomerium.dashboard.ListKeyPairsRequest\x1a(.pomerium.dashboard.ListKeyPairsResponse\x12\x64\n\rCreateKeyPair\x12(.pomerium.dashboard.CreateKeyPairRequest\x1a).pomerium.dashboard.CreateKeyPairResponse\x12\x64\n\rUpdateKeyPair\x12(.pomerium.dashboard.UpdateKeyPairRequest\x1a).pomerium.dashboard.UpdateKeyPairResponseB-Z+github.com/pomerium/pomerium-console/pkg/pbb\x06proto3')

_PUBLICKEYALGORITHM = DESCRIPTOR.enum_types_by_name['PublicKeyAlgorithm']
PublicKeyAlgorithm = enum_type_wrapper.EnumTypeWrapper(_PUBLICKEYALGORITHM)
_FORMAT = DESCRIPTOR.enum_types_by_name['Format']
Format = enum_type_wrapper.EnumTypeWrapper(_FORMAT)
PKA_UNKNOWN_DO_NOT_USE = 0
RSA = 1
DSA = 2
ECDSA = 3
ED25519 = 4
FORMAT_UNDEFINED_DO_NOT_USE = 0
PEM = 1


_KEYPAIR = DESCRIPTOR.message_types_by_name['KeyPair']
_KEYUSAGE = DESCRIPTOR.message_types_by_name['KeyUsage']
_NAME = DESCRIPTOR.message_types_by_name['Name']
_CERTIFICATEINFO = DESCRIPTOR.message_types_by_name['CertificateInfo']
_KEYPAIRRECORD = DESCRIPTOR.message_types_by_name['KeyPairRecord']
_DELETEKEYPAIRREQUEST = DESCRIPTOR.message_types_by_name['DeleteKeyPairRequest']
_DELETEKEYPAIRRESPONSE = DESCRIPTOR.message_types_by_name['DeleteKeyPairResponse']
_GETKEYPAIRREQUEST = DESCRIPTOR.message_types_by_name['GetKeyPairRequest']
_GETKEYPAIRRESPONSE = DESCRIPTOR.message_types_by_name['GetKeyPairResponse']
_LISTKEYPAIRSREQUEST = DESCRIPTOR.message_types_by_name['ListKeyPairsRequest']
_LISTKEYPAIRSRESPONSE = DESCRIPTOR.message_types_by_name['ListKeyPairsResponse']
_CREATEKEYPAIRREQUEST = DESCRIPTOR.message_types_by_name['CreateKeyPairRequest']
_CREATEKEYPAIRRESPONSE = DESCRIPTOR.message_types_by_name['CreateKeyPairResponse']
_UPDATEKEYPAIRREQUEST = DESCRIPTOR.message_types_by_name['UpdateKeyPairRequest']
_UPDATEKEYPAIRRESPONSE = DESCRIPTOR.message_types_by_name['UpdateKeyPairResponse']
KeyPair = _reflection.GeneratedProtocolMessageType('KeyPair', (_message.Message,), {
  'DESCRIPTOR' : _KEYPAIR,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.KeyPair)
  })
_sym_db.RegisterMessage(KeyPair)

KeyUsage = _reflection.GeneratedProtocolMessageType('KeyUsage', (_message.Message,), {
  'DESCRIPTOR' : _KEYUSAGE,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.KeyUsage)
  })
_sym_db.RegisterMessage(KeyUsage)

Name = _reflection.GeneratedProtocolMessageType('Name', (_message.Message,), {
  'DESCRIPTOR' : _NAME,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.Name)
  })
_sym_db.RegisterMessage(Name)

CertificateInfo = _reflection.GeneratedProtocolMessageType('CertificateInfo', (_message.Message,), {
  'DESCRIPTOR' : _CERTIFICATEINFO,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.CertificateInfo)
  })
_sym_db.RegisterMessage(CertificateInfo)

KeyPairRecord = _reflection.GeneratedProtocolMessageType('KeyPairRecord', (_message.Message,), {
  'DESCRIPTOR' : _KEYPAIRRECORD,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.KeyPairRecord)
  })
_sym_db.RegisterMessage(KeyPairRecord)

DeleteKeyPairRequest = _reflection.GeneratedProtocolMessageType('DeleteKeyPairRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETEKEYPAIRREQUEST,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.DeleteKeyPairRequest)
  })
_sym_db.RegisterMessage(DeleteKeyPairRequest)

DeleteKeyPairResponse = _reflection.GeneratedProtocolMessageType('DeleteKeyPairResponse', (_message.Message,), {
  'DESCRIPTOR' : _DELETEKEYPAIRRESPONSE,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.DeleteKeyPairResponse)
  })
_sym_db.RegisterMessage(DeleteKeyPairResponse)

GetKeyPairRequest = _reflection.GeneratedProtocolMessageType('GetKeyPairRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETKEYPAIRREQUEST,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.GetKeyPairRequest)
  })
_sym_db.RegisterMessage(GetKeyPairRequest)

GetKeyPairResponse = _reflection.GeneratedProtocolMessageType('GetKeyPairResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETKEYPAIRRESPONSE,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.GetKeyPairResponse)
  })
_sym_db.RegisterMessage(GetKeyPairResponse)

ListKeyPairsRequest = _reflection.GeneratedProtocolMessageType('ListKeyPairsRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTKEYPAIRSREQUEST,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.ListKeyPairsRequest)
  })
_sym_db.RegisterMessage(ListKeyPairsRequest)

ListKeyPairsResponse = _reflection.GeneratedProtocolMessageType('ListKeyPairsResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTKEYPAIRSRESPONSE,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.ListKeyPairsResponse)
  })
_sym_db.RegisterMessage(ListKeyPairsResponse)

CreateKeyPairRequest = _reflection.GeneratedProtocolMessageType('CreateKeyPairRequest', (_message.Message,), {
  'DESCRIPTOR' : _CREATEKEYPAIRREQUEST,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.CreateKeyPairRequest)
  })
_sym_db.RegisterMessage(CreateKeyPairRequest)

CreateKeyPairResponse = _reflection.GeneratedProtocolMessageType('CreateKeyPairResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEKEYPAIRRESPONSE,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.CreateKeyPairResponse)
  })
_sym_db.RegisterMessage(CreateKeyPairResponse)

UpdateKeyPairRequest = _reflection.GeneratedProtocolMessageType('UpdateKeyPairRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEKEYPAIRREQUEST,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.UpdateKeyPairRequest)
  })
_sym_db.RegisterMessage(UpdateKeyPairRequest)

UpdateKeyPairResponse = _reflection.GeneratedProtocolMessageType('UpdateKeyPairResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEKEYPAIRRESPONSE,
  '__module__' : 'key_chain_pb2'
  # @@protoc_insertion_point(class_scope:pomerium.dashboard.UpdateKeyPairResponse)
  })
_sym_db.RegisterMessage(UpdateKeyPairResponse)

_KEYCHAINSERVICE = DESCRIPTOR.services_by_name['KeyChainService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z+github.com/pomerium/pomerium-console/pkg/pb'
  _PUBLICKEYALGORITHM._serialized_start=2511
  _PUBLICKEYALGORITHM._serialized_end=2601
  _FORMAT._serialized_start=2603
  _FORMAT._serialized_end=2653
  _KEYPAIR._serialized_start=73
  _KEYPAIR._serialized_end=261
  _KEYUSAGE._serialized_start=264
  _KEYUSAGE._serialized_end=530
  _NAME._serialized_start=533
  _NAME._serialized_end=732
  _CERTIFICATEINFO._serialized_start=735
  _CERTIFICATEINFO._serialized_end=1382
  _KEYPAIRRECORD._serialized_start=1385
  _KEYPAIRRECORD._serialized_end=1626
  _DELETEKEYPAIRREQUEST._serialized_start=1628
  _DELETEKEYPAIRREQUEST._serialized_end=1662
  _DELETEKEYPAIRRESPONSE._serialized_start=1664
  _DELETEKEYPAIRRESPONSE._serialized_end=1687
  _GETKEYPAIRREQUEST._serialized_start=1689
  _GETKEYPAIRREQUEST._serialized_end=1720
  _GETKEYPAIRRESPONSE._serialized_start=1722
  _GETKEYPAIRRESPONSE._serialized_end=1795
  _LISTKEYPAIRSREQUEST._serialized_start=1798
  _LISTKEYPAIRSREQUEST._serialized_end=2001
  _LISTKEYPAIRSRESPONSE._serialized_start=2003
  _LISTKEYPAIRSRESPONSE._serialized_end=2100
  _CREATEKEYPAIRREQUEST._serialized_start=2103
  _CREATEKEYPAIRREQUEST._serialized_end=2239
  _CREATEKEYPAIRRESPONSE._serialized_start=2241
  _CREATEKEYPAIRRESPONSE._serialized_end=2317
  _UPDATEKEYPAIRREQUEST._serialized_start=2319
  _UPDATEKEYPAIRREQUEST._serialized_end=2431
  _UPDATEKEYPAIRRESPONSE._serialized_start=2433
  _UPDATEKEYPAIRRESPONSE._serialized_end=2509
  _KEYCHAINSERVICE._serialized_start=2656
  _KEYCHAINSERVICE._serialized_end=3171
# @@protoc_insertion_point(module_scope)
