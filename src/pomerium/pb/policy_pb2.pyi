"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Policy(google.protobuf.message.Message):
    """Policy defines an authorization policy which can be applied to a route or
    routes
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AllowedIdpClaimsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> google.protobuf.struct_pb2.ListValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: google.protobuf.struct_pb2.ListValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class RoutesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    NAMESPACE_ID_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    MODIFIED_AT_FIELD_NUMBER: builtins.int
    DELETED_AT_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    ALLOWED_USERS_FIELD_NUMBER: builtins.int
    ALLOWED_DOMAINS_FIELD_NUMBER: builtins.int
    ALLOWED_IDP_CLAIMS_FIELD_NUMBER: builtins.int
    REGO_FIELD_NUMBER: builtins.int
    PPL_FIELD_NUMBER: builtins.int
    ENFORCED_FIELD_NUMBER: builtins.int
    EXPLANATION_FIELD_NUMBER: builtins.int
    REMEDIATION_FIELD_NUMBER: builtins.int
    ORIGINATOR_ID_FIELD_NUMBER: builtins.int
    ROUTES_FIELD_NUMBER: builtins.int
    NAMESPACE_NAME_FIELD_NUMBER: builtins.int
    id: builtins.str
    namespace_id: builtins.str
    name: builtins.str
    description: builtins.str
    ppl: builtins.str
    """PPL definition in JSON format"""
    enforced: builtins.bool
    """policy is automatically applied to all routes in namespace_id and child
    namespaces
    """
    explanation: builtins.str
    remediation: builtins.str
    originator_id: builtins.str
    namespace_name: builtins.str
    """computed"""
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def modified_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def deleted_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def allowed_users(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def allowed_domains(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def allowed_idp_claims(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, google.protobuf.struct_pb2.ListValue]: ...
    @property
    def rego(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """custom rego definition in string format"""

    @property
    def routes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """computed
        route id => name
        """

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        namespace_id: builtins.str = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        modified_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        deleted_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        allowed_users: collections.abc.Iterable[builtins.str] | None = ...,
        allowed_domains: collections.abc.Iterable[builtins.str] | None = ...,
        allowed_idp_claims: collections.abc.Mapping[builtins.str, google.protobuf.struct_pb2.ListValue] | None = ...,
        rego: collections.abc.Iterable[builtins.str] | None = ...,
        ppl: builtins.str = ...,
        enforced: builtins.bool = ...,
        explanation: builtins.str = ...,
        remediation: builtins.str = ...,
        originator_id: builtins.str = ...,
        routes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        namespace_name: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_at", b"created_at", "deleted_at", b"deleted_at", "modified_at", b"modified_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["allowed_domains", b"allowed_domains", "allowed_idp_claims", b"allowed_idp_claims", "allowed_users", b"allowed_users", "created_at", b"created_at", "deleted_at", b"deleted_at", "description", b"description", "enforced", b"enforced", "explanation", b"explanation", "id", b"id", "modified_at", b"modified_at", "name", b"name", "namespace_id", b"namespace_id", "namespace_name", b"namespace_name", "originator_id", b"originator_id", "ppl", b"ppl", "rego", b"rego", "remediation", b"remediation", "routes", b"routes"]) -> None: ...

global___Policy = Policy

@typing.final
class DeletePolicyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___DeletePolicyRequest = DeletePolicyRequest

@typing.final
class DeletePolicyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeletePolicyResponse = DeletePolicyResponse

@typing.final
class GetPolicyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id"]) -> None: ...

global___GetPolicyRequest = GetPolicyRequest

@typing.final
class GetPolicyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POLICY_FIELD_NUMBER: builtins.int
    @property
    def policy(self) -> global___Policy: ...
    def __init__(
        self,
        *,
        policy: global___Policy | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["policy", b"policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["policy", b"policy"]) -> None: ...

global___GetPolicyResponse = GetPolicyResponse

@typing.final
class ListPoliciesRequest(google.protobuf.message.Message):
    """ListPoliciesRequest specifies the policies to list"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    query: builtins.str
    """list Policies whose name contains the query string"""
    offset: builtins.int
    """list Policies starting from an offset in the total list"""
    limit: builtins.int
    """limit the number of entries returned"""
    order_by: builtins.str
    """sort the Policies by newest, oldest or name"""
    cluster_id: builtins.str
    """list Policies belonging to the cluster, or the default cluster if not set"""
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        query: builtins.str | None = ...,
        offset: builtins.int | None = ...,
        limit: builtins.int | None = ...,
        order_by: builtins.str | None = ...,
        cluster_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "_limit", b"_limit", "_offset", b"_offset", "_order_by", b"_order_by", "_query", b"_query", "cluster_id", b"cluster_id", "limit", b"limit", "offset", b"offset", "order_by", b"order_by", "query", b"query"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "_limit", b"_limit", "_offset", b"_offset", "_order_by", b"_order_by", "_query", b"_query", "cluster_id", b"cluster_id", "limit", b"limit", "namespace", b"namespace", "offset", b"offset", "order_by", b"order_by", "query", b"query"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_limit", b"_limit"]) -> typing.Literal["limit"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_offset", b"_offset"]) -> typing.Literal["offset"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_order_by", b"_order_by"]) -> typing.Literal["order_by"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_query", b"_query"]) -> typing.Literal["query"] | None: ...

global___ListPoliciesRequest = ListPoliciesRequest

@typing.final
class ListPoliciesResponse(google.protobuf.message.Message):
    """ListPoliciesResponse is the list of policies found for a ListPoliciesRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POLICIES_FIELD_NUMBER: builtins.int
    TOTAL_COUNT_FIELD_NUMBER: builtins.int
    total_count: builtins.int
    @property
    def policies(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Policy]: ...
    def __init__(
        self,
        *,
        policies: collections.abc.Iterable[global___Policy] | None = ...,
        total_count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["policies", b"policies", "total_count", b"total_count"]) -> None: ...

global___ListPoliciesResponse = ListPoliciesResponse

@typing.final
class SetPolicyRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POLICY_FIELD_NUMBER: builtins.int
    @property
    def policy(self) -> global___Policy: ...
    def __init__(
        self,
        *,
        policy: global___Policy | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["policy", b"policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["policy", b"policy"]) -> None: ...

global___SetPolicyRequest = SetPolicyRequest

@typing.final
class SetPolicyResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POLICY_FIELD_NUMBER: builtins.int
    @property
    def policy(self) -> global___Policy: ...
    def __init__(
        self,
        *,
        policy: global___Policy | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["policy", b"policy"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["policy", b"policy"]) -> None: ...

global___SetPolicyResponse = SetPolicyResponse
