"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.struct_pb2
import google.protobuf.timestamp_pb2
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class RecoveryToken(google.protobuf.message.Message):
    """RecoveryToken is a recovery account for logging into the console without a
    functioning Pomerium proxy
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAMESPACE_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    MODIFIED_AT_FIELD_NUMBER: builtins.int
    EXPIRES_AT_FIELD_NUMBER: builtins.int
    PUBLIC_KEY_FIELD_NUMBER: builtins.int
    id: builtins.str
    namespace: builtins.str
    public_key: builtins.str
    @property
    def created_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def modified_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def expires_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        namespace: builtins.str = ...,
        created_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        modified_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        expires_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        public_key: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["created_at", b"created_at", "expires_at", b"expires_at", "modified_at", b"modified_at"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["created_at", b"created_at", "expires_at", b"expires_at", "id", b"id", "modified_at", b"modified_at", "namespace", b"namespace", "public_key", b"public_key"]) -> None: ...

global___RecoveryToken = RecoveryToken

@typing.final
class GroupInfo(google.protobuf.message.Message):
    """GroupInfo defines a directory group in the databroker"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    id: builtins.str
    name: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["id", b"id", "name", b"name"]) -> None: ...

global___GroupInfo = GroupInfo

@typing.final
class UserInfo(google.protobuf.message.Message):
    """UserInfo defines the metadata for a directory user in the databroker"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class NamespaceRolesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    EMAIL_FIELD_NUMBER: builtins.int
    GROUPS_FIELD_NUMBER: builtins.int
    NAMESPACE_ROLES_FIELD_NUMBER: builtins.int
    PICTURE_URL_FIELD_NUMBER: builtins.int
    IS_IMPERSONATED_FIELD_NUMBER: builtins.int
    id: builtins.str
    name: builtins.str
    email: builtins.str
    picture_url: builtins.str
    is_impersonated: builtins.bool
    @property
    def groups(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def namespace_roles(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        name: builtins.str = ...,
        email: builtins.str = ...,
        groups: collections.abc.Iterable[builtins.str] | None = ...,
        namespace_roles: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        picture_url: builtins.str = ...,
        is_impersonated: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["email", b"email", "groups", b"groups", "id", b"id", "is_impersonated", b"is_impersonated", "name", b"name", "namespace_roles", b"namespace_roles", "picture_url", b"picture_url"]) -> None: ...

global___UserInfo = UserInfo

@typing.final
class GetGroupInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_ID_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    group_id: builtins.str
    cluster_id: builtins.str
    def __init__(
        self,
        *,
        group_id: builtins.str = ...,
        cluster_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id", "group_id", b"group_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...

global___GetGroupInfoRequest = GetGroupInfoRequest

@typing.final
class GetGroupInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUP_INFO_FIELD_NUMBER: builtins.int
    @property
    def group_info(self) -> global___GroupInfo: ...
    def __init__(
        self,
        *,
        group_info: global___GroupInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["group_info", b"group_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["group_info", b"group_info"]) -> None: ...

global___GetGroupInfoResponse = GetGroupInfoResponse

@typing.final
class GetUserInfoRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_ID_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    user_id: builtins.str
    cluster_id: builtins.str
    def __init__(
        self,
        *,
        user_id: builtins.str | None = ...,
        cluster_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "_user_id", b"_user_id", "cluster_id", b"cluster_id", "user_id", b"user_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "_user_id", b"_user_id", "cluster_id", b"cluster_id", "user_id", b"user_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_user_id", b"_user_id"]) -> typing.Literal["user_id"] | None: ...

global___GetUserInfoRequest = GetUserInfoRequest

@typing.final
class GetUserInfoResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USER_INFO_FIELD_NUMBER: builtins.int
    @property
    def user_info(self) -> global___UserInfo: ...
    def __init__(
        self,
        *,
        user_info: global___UserInfo | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["user_info", b"user_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["user_info", b"user_info"]) -> None: ...

global___GetUserInfoResponse = GetUserInfoResponse

@typing.final
class QueryGroupsRequest(google.protobuf.message.Message):
    """QueryGroupsRequest defines the groups to retrieve"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUERY_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    query: builtins.str
    offset: builtins.int
    limit: builtins.int
    cluster_id: builtins.str
    def __init__(
        self,
        *,
        query: builtins.str = ...,
        offset: builtins.int = ...,
        limit: builtins.int = ...,
        cluster_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id", "limit", b"limit", "offset", b"offset", "query", b"query"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...

global___QueryGroupsRequest = QueryGroupsRequest

@typing.final
class QueryGroupsResponse(google.protobuf.message.Message):
    """QueryGroupsResponse is the list of groups retrieved from a QueryGroupsRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GROUPS_FIELD_NUMBER: builtins.int
    TOTAL_COUNT_FIELD_NUMBER: builtins.int
    total_count: builtins.int
    @property
    def groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___GroupInfo]: ...
    def __init__(
        self,
        *,
        groups: collections.abc.Iterable[global___GroupInfo] | None = ...,
        total_count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["groups", b"groups", "total_count", b"total_count"]) -> None: ...

global___QueryGroupsResponse = QueryGroupsResponse

@typing.final
class QueryUsersRequest(google.protobuf.message.Message):
    """QueryUsersRequest defines the users to retrieve"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUERY_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    query: builtins.str
    """list Users with any fields that match the query"""
    offset: builtins.int
    """list Users starting from an offset in the total list"""
    limit: builtins.int
    """limit the number of User entries returned"""
    cluster_id: builtins.str
    def __init__(
        self,
        *,
        query: builtins.str = ...,
        offset: builtins.int = ...,
        limit: builtins.int = ...,
        cluster_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id", "limit", b"limit", "offset", b"offset", "query", b"query"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...

global___QueryUsersRequest = QueryUsersRequest

@typing.final
class QueryUsersResponse(google.protobuf.message.Message):
    """QueryUsersResponse is the list of users retrieved from a QueryUsersRequest"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    USERS_FIELD_NUMBER: builtins.int
    TOTAL_COUNT_FIELD_NUMBER: builtins.int
    total_count: builtins.int
    @property
    def users(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___UserInfo]: ...
    def __init__(
        self,
        *,
        users: collections.abc.Iterable[global___UserInfo] | None = ...,
        total_count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["total_count", b"total_count", "users", b"users"]) -> None: ...

global___QueryUsersResponse = QueryUsersResponse

@typing.final
class PomeriumServiceAccount(google.protobuf.message.Message):
    """PomeriumServiceAccount defines the identity properties of a service account"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAMESPACE_ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    ACCESSED_AT_FIELD_NUMBER: builtins.int
    EXPIRES_AT_FIELD_NUMBER: builtins.int
    ISSUED_AT_FIELD_NUMBER: builtins.int
    ORIGINATOR_ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    namespace_id: builtins.str
    description: builtins.str
    user_id: builtins.str
    originator_id: builtins.str
    @property
    def accessed_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def expires_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def issued_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        namespace_id: builtins.str | None = ...,
        description: builtins.str | None = ...,
        user_id: builtins.str = ...,
        accessed_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        expires_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        issued_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        originator_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_description", b"_description", "_namespace_id", b"_namespace_id", "_originator_id", b"_originator_id", "accessed_at", b"accessed_at", "description", b"description", "expires_at", b"expires_at", "issued_at", b"issued_at", "namespace_id", b"namespace_id", "originator_id", b"originator_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_description", b"_description", "_namespace_id", b"_namespace_id", "_originator_id", b"_originator_id", "accessed_at", b"accessed_at", "description", b"description", "expires_at", b"expires_at", "id", b"id", "issued_at", b"issued_at", "namespace_id", b"namespace_id", "originator_id", b"originator_id", "user_id", b"user_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_description", b"_description"]) -> typing.Literal["description"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_namespace_id", b"_namespace_id"]) -> typing.Literal["namespace_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_originator_id", b"_originator_id"]) -> typing.Literal["originator_id"] | None: ...

global___PomeriumServiceAccount = PomeriumServiceAccount

@typing.final
class AddPomeriumServiceAccountRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: builtins.str
    @property
    def service_account(self) -> global___PomeriumServiceAccount: ...
    def __init__(
        self,
        *,
        service_account: global___PomeriumServiceAccount | None = ...,
        cluster_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id", "service_account", b"service_account"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id", "service_account", b"service_account"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...

global___AddPomeriumServiceAccountRequest = AddPomeriumServiceAccountRequest

@typing.final
class AddPomeriumServiceAccountResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    JWT_FIELD_NUMBER: builtins.int
    JWT: builtins.str
    @property
    def service_account(self) -> global___PomeriumServiceAccount: ...
    def __init__(
        self,
        *,
        service_account: global___PomeriumServiceAccount | None = ...,
        JWT: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["service_account", b"service_account"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["JWT", b"JWT", "service_account", b"service_account"]) -> None: ...

global___AddPomeriumServiceAccountResponse = AddPomeriumServiceAccountResponse

@typing.final
class DeletePomeriumServiceAccountRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    cluster_id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        cluster_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id", "id", b"id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...

global___DeletePomeriumServiceAccountRequest = DeletePomeriumServiceAccountRequest

@typing.final
class DeletePomeriumServiceAccountResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeletePomeriumServiceAccountResponse = DeletePomeriumServiceAccountResponse

@typing.final
class GetPomeriumServiceAccountRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    cluster_id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        cluster_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id", "id", b"id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...

global___GetPomeriumServiceAccountRequest = GetPomeriumServiceAccountRequest

@typing.final
class GetPomeriumServiceAccountResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    @property
    def service_account(self) -> global___PomeriumServiceAccount: ...
    def __init__(
        self,
        *,
        service_account: global___PomeriumServiceAccount | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["service_account", b"service_account"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["service_account", b"service_account"]) -> None: ...

global___GetPomeriumServiceAccountResponse = GetPomeriumServiceAccountResponse

@typing.final
class ListPomeriumServiceAccountsRequest(google.protobuf.message.Message):
    """ListPomeriumServiceAccountsRequest specifies the service accounts to list"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMESPACE_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    namespace: builtins.str
    cluster_id: builtins.str
    def __init__(
        self,
        *,
        namespace: builtins.str = ...,
        cluster_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id", "namespace", b"namespace"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...

global___ListPomeriumServiceAccountsRequest = ListPomeriumServiceAccountsRequest

@typing.final
class ListPomeriumServiceAccountsResponse(google.protobuf.message.Message):
    """ListPomeriumServiceAccountsResponse is the list of service accounts found for
    a ListPomeriumServiceAccountsRequest
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_ACCOUNTS_FIELD_NUMBER: builtins.int
    @property
    def service_accounts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PomeriumServiceAccount]: ...
    def __init__(
        self,
        *,
        service_accounts: collections.abc.Iterable[global___PomeriumServiceAccount] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["service_accounts", b"service_accounts"]) -> None: ...

global___ListPomeriumServiceAccountsResponse = ListPomeriumServiceAccountsResponse

@typing.final
class SetPomeriumServiceAccountRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    cluster_id: builtins.str
    @property
    def service_account(self) -> global___PomeriumServiceAccount: ...
    def __init__(
        self,
        *,
        service_account: global___PomeriumServiceAccount | None = ...,
        cluster_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id", "service_account", b"service_account"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id", "service_account", b"service_account"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...

global___SetPomeriumServiceAccountRequest = SetPomeriumServiceAccountRequest

@typing.final
class SetPomeriumServiceAccountResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SERVICE_ACCOUNT_FIELD_NUMBER: builtins.int
    @property
    def service_account(self) -> global___PomeriumServiceAccount: ...
    def __init__(
        self,
        *,
        service_account: global___PomeriumServiceAccount | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["service_account", b"service_account"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["service_account", b"service_account"]) -> None: ...

global___SetPomeriumServiceAccountResponse = SetPomeriumServiceAccountResponse

@typing.final
class PomeriumSession(google.protobuf.message.Message):
    """PomeriumSession defines a user session from the databroker"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Group(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ID_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        EMAIL_FIELD_NUMBER: builtins.int
        id: builtins.str
        name: builtins.str
        email: builtins.str
        def __init__(
            self,
            *,
            id: builtins.str = ...,
            name: builtins.str = ...,
            email: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["email", b"email", "id", b"id", "name", b"name"]) -> None: ...

    @typing.final
    class User(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ID_FIELD_NUMBER: builtins.int
        NAME_FIELD_NUMBER: builtins.int
        EMAIL_FIELD_NUMBER: builtins.int
        id: builtins.str
        name: builtins.str
        email: builtins.str
        def __init__(
            self,
            *,
            id: builtins.str = ...,
            name: builtins.str = ...,
            email: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["email", b"email", "id", b"id", "name", b"name"]) -> None: ...

    @typing.final
    class ClaimsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> google.protobuf.struct_pb2.ListValue: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: google.protobuf.struct_pb2.ListValue | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    GROUPS_FIELD_NUMBER: builtins.int
    ISSUER_FIELD_NUMBER: builtins.int
    ACCESSED_AT_FIELD_NUMBER: builtins.int
    ISSUED_AT_FIELD_NUMBER: builtins.int
    EXPIRES_AT_FIELD_NUMBER: builtins.int
    AUDIENCE_FIELD_NUMBER: builtins.int
    CLAIMS_FIELD_NUMBER: builtins.int
    id: builtins.str
    issuer: builtins.str
    @property
    def user(self) -> global___PomeriumSession.User: ...
    @property
    def groups(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PomeriumSession.Group]: ...
    @property
    def accessed_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def issued_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def expires_at(self) -> google.protobuf.timestamp_pb2.Timestamp: ...
    @property
    def audience(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def claims(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, google.protobuf.struct_pb2.ListValue]: ...
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        user: global___PomeriumSession.User | None = ...,
        groups: collections.abc.Iterable[global___PomeriumSession.Group] | None = ...,
        issuer: builtins.str = ...,
        accessed_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        issued_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        expires_at: google.protobuf.timestamp_pb2.Timestamp | None = ...,
        audience: collections.abc.Iterable[builtins.str] | None = ...,
        claims: collections.abc.Mapping[builtins.str, google.protobuf.struct_pb2.ListValue] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["accessed_at", b"accessed_at", "expires_at", b"expires_at", "issued_at", b"issued_at", "user", b"user"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["accessed_at", b"accessed_at", "audience", b"audience", "claims", b"claims", "expires_at", b"expires_at", "groups", b"groups", "id", b"id", "issued_at", b"issued_at", "issuer", b"issuer", "user", b"user"]) -> None: ...

global___PomeriumSession = PomeriumSession

@typing.final
class DeletePomeriumSessionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    cluster_id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        cluster_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id", "id", b"id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...

global___DeletePomeriumSessionRequest = DeletePomeriumSessionRequest

@typing.final
class DeletePomeriumSessionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___DeletePomeriumSessionResponse = DeletePomeriumSessionResponse

@typing.final
class GetPomeriumSessionRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    id: builtins.str
    cluster_id: builtins.str
    def __init__(
        self,
        *,
        id: builtins.str = ...,
        cluster_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id", "id", b"id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...

global___GetPomeriumSessionRequest = GetPomeriumSessionRequest

@typing.final
class GetPomeriumSessionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_FIELD_NUMBER: builtins.int
    ASSOCIATED_SESSIONS_FIELD_NUMBER: builtins.int
    @property
    def session(self) -> global___PomeriumSession: ...
    @property
    def associated_sessions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PomeriumSession]: ...
    def __init__(
        self,
        *,
        session: global___PomeriumSession | None = ...,
        associated_sessions: collections.abc.Iterable[global___PomeriumSession] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["session", b"session"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["associated_sessions", b"associated_sessions", "session", b"session"]) -> None: ...

global___GetPomeriumSessionResponse = GetPomeriumSessionResponse

@typing.final
class ListPomeriumSessionsRequest(google.protobuf.message.Message):
    """ListPomeriumSessionsRequest specifies the sessions to list"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    QUERY_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    LIMIT_FIELD_NUMBER: builtins.int
    ORDER_BY_FIELD_NUMBER: builtins.int
    USER_ID_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    query: builtins.str
    """list Sessions with any fields that contain the query string"""
    offset: builtins.int
    """list Sessions starting from an offset in the total list"""
    limit: builtins.int
    """limit the number of Session entries returned"""
    order_by: builtins.str
    """sort the Sessions by newest, oldest or name"""
    user_id: builtins.str
    cluster_id: builtins.str
    def __init__(
        self,
        *,
        query: builtins.str | None = ...,
        offset: builtins.int | None = ...,
        limit: builtins.int | None = ...,
        order_by: builtins.str | None = ...,
        user_id: builtins.str | None = ...,
        cluster_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "_limit", b"_limit", "_offset", b"_offset", "_order_by", b"_order_by", "_query", b"_query", "_user_id", b"_user_id", "cluster_id", b"cluster_id", "limit", b"limit", "offset", b"offset", "order_by", b"order_by", "query", b"query", "user_id", b"user_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "_limit", b"_limit", "_offset", b"_offset", "_order_by", b"_order_by", "_query", b"_query", "_user_id", b"_user_id", "cluster_id", b"cluster_id", "limit", b"limit", "offset", b"offset", "order_by", b"order_by", "query", b"query", "user_id", b"user_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_limit", b"_limit"]) -> typing.Literal["limit"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_offset", b"_offset"]) -> typing.Literal["offset"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_order_by", b"_order_by"]) -> typing.Literal["order_by"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_query", b"_query"]) -> typing.Literal["query"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_user_id", b"_user_id"]) -> typing.Literal["user_id"] | None: ...

global___ListPomeriumSessionsRequest = ListPomeriumSessionsRequest

@typing.final
class ListPomeriumSessionsResponse(google.protobuf.message.Message):
    """ListPomeriumSessionsResponse is the sessions found for a
    ListPomeriumSessionsRequest
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSIONS_FIELD_NUMBER: builtins.int
    TOTAL_COUNT_FIELD_NUMBER: builtins.int
    total_count: builtins.int
    @property
    def sessions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PomeriumSession]: ...
    def __init__(
        self,
        *,
        sessions: collections.abc.Iterable[global___PomeriumSession] | None = ...,
        total_count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["sessions", b"sessions", "total_count", b"total_count"]) -> None: ...

global___ListPomeriumSessionsResponse = ListPomeriumSessionsResponse

@typing.final
class ListPomeriumSessionsForImpersonationRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLUSTER_ID_FIELD_NUMBER: builtins.int
    QUERY_FIELD_NUMBER: builtins.int
    cluster_id: builtins.str
    query: builtins.str
    def __init__(
        self,
        *,
        cluster_id: builtins.str | None = ...,
        query: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "_query", b"_query", "cluster_id", b"cluster_id", "query", b"query"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "_query", b"_query", "cluster_id", b"cluster_id", "query", b"query"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing.Literal["_query", b"_query"]) -> typing.Literal["query"] | None: ...

global___ListPomeriumSessionsForImpersonationRequest = ListPomeriumSessionsForImpersonationRequest

@typing.final
class ListPomeriumSessionsForImpersonationResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class Session(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ID_FIELD_NUMBER: builtins.int
        USER_DISPLAY_NAME_FIELD_NUMBER: builtins.int
        USER_EMAIL_FIELD_NUMBER: builtins.int
        id: builtins.str
        user_display_name: builtins.str
        user_email: builtins.str
        def __init__(
            self,
            *,
            id: builtins.str = ...,
            user_display_name: builtins.str = ...,
            user_email: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["id", b"id", "user_display_name", b"user_display_name", "user_email", b"user_email"]) -> None: ...

    SESSIONS_FIELD_NUMBER: builtins.int
    @property
    def sessions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ListPomeriumSessionsForImpersonationResponse.Session]: ...
    def __init__(
        self,
        *,
        sessions: collections.abc.Iterable[global___ListPomeriumSessionsForImpersonationResponse.Session] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["sessions", b"sessions"]) -> None: ...

global___ListPomeriumSessionsForImpersonationResponse = ListPomeriumSessionsForImpersonationResponse

@typing.final
class ImpersonateRequest(google.protobuf.message.Message):
    """ImpersonateRequest defines the identity information to impersonate"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SESSION_ID_FIELD_NUMBER: builtins.int
    CLUSTER_ID_FIELD_NUMBER: builtins.int
    session_id: builtins.str
    cluster_id: builtins.str
    def __init__(
        self,
        *,
        session_id: builtins.str = ...,
        cluster_id: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["_cluster_id", b"_cluster_id", "cluster_id", b"cluster_id", "session_id", b"session_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["_cluster_id", b"_cluster_id"]) -> typing.Literal["cluster_id"] | None: ...

global___ImpersonateRequest = ImpersonateRequest

@typing.final
class ImpersonateResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___ImpersonateResponse = ImpersonateResponse
