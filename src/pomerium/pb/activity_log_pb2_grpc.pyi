"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import activity_log_pb2
import collections.abc
import grpc
import grpc.aio
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class ActivityLogServiceStub:
    """ActivityLogService tracks historical changes to configuration made through
    Pomerium Enterprise
    """

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    GetActivityLogEntry: grpc.UnaryUnaryMultiCallable[
        activity_log_pb2.GetActivityLogEntryRequest,
        activity_log_pb2.GetActivityLogEntryResponse,
    ]
    """GetActivityLogEntry retrieves a specific activity log entry"""

    ListActivityLogEntries: grpc.UnaryUnaryMultiCallable[
        activity_log_pb2.ListActivityLogEntriesRequest,
        activity_log_pb2.ListActivityLogEntriesResponse,
    ]
    """ListActivityLogEntries lists activity log entries based on paramters in the
    ListActivityLogEntriesRequest
    """

class ActivityLogServiceAsyncStub:
    """ActivityLogService tracks historical changes to configuration made through
    Pomerium Enterprise
    """

    GetActivityLogEntry: grpc.aio.UnaryUnaryMultiCallable[
        activity_log_pb2.GetActivityLogEntryRequest,
        activity_log_pb2.GetActivityLogEntryResponse,
    ]
    """GetActivityLogEntry retrieves a specific activity log entry"""

    ListActivityLogEntries: grpc.aio.UnaryUnaryMultiCallable[
        activity_log_pb2.ListActivityLogEntriesRequest,
        activity_log_pb2.ListActivityLogEntriesResponse,
    ]
    """ListActivityLogEntries lists activity log entries based on paramters in the
    ListActivityLogEntriesRequest
    """

class ActivityLogServiceServicer(metaclass=abc.ABCMeta):
    """ActivityLogService tracks historical changes to configuration made through
    Pomerium Enterprise
    """

    @abc.abstractmethod
    def GetActivityLogEntry(
        self,
        request: activity_log_pb2.GetActivityLogEntryRequest,
        context: _ServicerContext,
    ) -> typing.Union[activity_log_pb2.GetActivityLogEntryResponse, collections.abc.Awaitable[activity_log_pb2.GetActivityLogEntryResponse]]:
        """GetActivityLogEntry retrieves a specific activity log entry"""

    @abc.abstractmethod
    def ListActivityLogEntries(
        self,
        request: activity_log_pb2.ListActivityLogEntriesRequest,
        context: _ServicerContext,
    ) -> typing.Union[activity_log_pb2.ListActivityLogEntriesResponse, collections.abc.Awaitable[activity_log_pb2.ListActivityLogEntriesResponse]]:
        """ListActivityLogEntries lists activity log entries based on paramters in the
        ListActivityLogEntriesRequest
        """

def add_ActivityLogServiceServicer_to_server(servicer: ActivityLogServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
