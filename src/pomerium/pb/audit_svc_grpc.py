# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: audit_svc.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import audit.audit_pb2
import crypt.crypt_pb2
import audit_svc_pb2


class AuditServiceBase(abc.ABC):

    @abc.abstractmethod
    async def DecryptAuditRecords(self, stream: 'grpclib.server.Stream[audit_svc_pb2.DecryptAuditRecordsRequest, audit_svc_pb2.DecryptAuditRecordsResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/pomerium.dashboard.AuditService/DecryptAuditRecords': grpclib.const.Handler(
                self.DecryptAuditRecords,
                grpclib.const.Cardinality.UNARY_UNARY,
                audit_svc_pb2.DecryptAuditRecordsRequest,
                audit_svc_pb2.DecryptAuditRecordsResponse,
            ),
        }


class AuditServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.DecryptAuditRecords = grpclib.client.UnaryUnaryMethod(
            channel,
            '/pomerium.dashboard.AuditService/DecryptAuditRecords',
            audit_svc_pb2.DecryptAuditRecordsRequest,
            audit_svc_pb2.DecryptAuditRecordsResponse,
        )
