# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tests/harness/cases/bytes.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from validate import validate_pb2 as validate_dot_validate__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1ftests/harness/cases/bytes.proto\x12\x13tests.harness.cases\x1a\x17validate/validate.proto\"\x18\n\tBytesNone\x12\x0b\n\x03val\x18\x01 \x01(\x0c\"%\n\nBytesConst\x12\x17\n\x03val\x18\x01 \x01(\x0c\x42\n\xfa\x42\x07z\x05\n\x03\x66oo\"\'\n\x07\x42ytesIn\x12\x1c\n\x03val\x18\x01 \x01(\x0c\x42\x0f\xfa\x42\x0cz\nB\x03\x62\x61rB\x03\x62\x61z\",\n\nBytesNotIn\x12\x1e\n\x03val\x18\x01 \x01(\x0c\x42\x11\xfa\x42\x0ez\x0cJ\x04\x66izzJ\x04\x62uzz\" \n\x08\x42ytesLen\x12\x14\n\x03val\x18\x01 \x01(\x0c\x42\x07\xfa\x42\x04z\x02h\x03\"#\n\x0b\x42ytesMinLen\x12\x14\n\x03val\x18\x01 \x01(\x0c\x42\x07\xfa\x42\x04z\x02\x10\x03\"#\n\x0b\x42ytesMaxLen\x12\x14\n\x03val\x18\x01 \x01(\x0c\x42\x07\xfa\x42\x04z\x02\x18\x05\"(\n\x0e\x42ytesMinMaxLen\x12\x16\n\x03val\x18\x01 \x01(\x0c\x42\t\xfa\x42\x06z\x04\x10\x03\x18\x05\"-\n\x13\x42ytesEqualMinMaxLen\x12\x16\n\x03val\x18\x01 \x01(\x0c\x42\t\xfa\x42\x06z\x04\x10\x05\x18\x05\",\n\x0c\x42ytesPattern\x12\x1c\n\x03val\x18\x01 \x01(\x0c\x42\x0f\xfa\x42\x0cz\n\"\x08^[\x00-\x7f]+$\"$\n\x0b\x42ytesPrefix\x12\x15\n\x03val\x18\x01 \x01(\x0c\x42\x08\xfa\x42\x05z\x03*\x01\x99\"(\n\rBytesContains\x12\x17\n\x03val\x18\x01 \x01(\x0c\x42\n\xfa\x42\x07z\x05:\x03\x62\x61r\"\'\n\x0b\x42ytesSuffix\x12\x18\n\x03val\x18\x01 \x01(\x0c\x42\x0b\xfa\x42\x08z\x06\x32\x04\x62uzz\"\x1f\n\x07\x42ytesIP\x12\x14\n\x03val\x18\x01 \x01(\x0c\x42\x07\xfa\x42\x04z\x02P\x01\"!\n\tBytesIPv4\x12\x14\n\x03val\x18\x01 \x01(\x0c\x42\x07\xfa\x42\x04z\x02X\x01\"!\n\tBytesIPv6\x12\x14\n\x03val\x18\x01 \x01(\x0c\x42\x07\xfa\x42\x04z\x02`\x01\")\n\x0f\x42ytesIPv6Ignore\x12\x16\n\x03val\x18\x01 \x01(\x0c\x42\t\xfa\x42\x06z\x04`\x01p\x01\x42HZFgithub.com/envoyproxy/protoc-gen-validate/tests/harness/cases/go;casesb\x06proto3')



_BYTESNONE = DESCRIPTOR.message_types_by_name['BytesNone']
_BYTESCONST = DESCRIPTOR.message_types_by_name['BytesConst']
_BYTESIN = DESCRIPTOR.message_types_by_name['BytesIn']
_BYTESNOTIN = DESCRIPTOR.message_types_by_name['BytesNotIn']
_BYTESLEN = DESCRIPTOR.message_types_by_name['BytesLen']
_BYTESMINLEN = DESCRIPTOR.message_types_by_name['BytesMinLen']
_BYTESMAXLEN = DESCRIPTOR.message_types_by_name['BytesMaxLen']
_BYTESMINMAXLEN = DESCRIPTOR.message_types_by_name['BytesMinMaxLen']
_BYTESEQUALMINMAXLEN = DESCRIPTOR.message_types_by_name['BytesEqualMinMaxLen']
_BYTESPATTERN = DESCRIPTOR.message_types_by_name['BytesPattern']
_BYTESPREFIX = DESCRIPTOR.message_types_by_name['BytesPrefix']
_BYTESCONTAINS = DESCRIPTOR.message_types_by_name['BytesContains']
_BYTESSUFFIX = DESCRIPTOR.message_types_by_name['BytesSuffix']
_BYTESIP = DESCRIPTOR.message_types_by_name['BytesIP']
_BYTESIPV4 = DESCRIPTOR.message_types_by_name['BytesIPv4']
_BYTESIPV6 = DESCRIPTOR.message_types_by_name['BytesIPv6']
_BYTESIPV6IGNORE = DESCRIPTOR.message_types_by_name['BytesIPv6Ignore']
BytesNone = _reflection.GeneratedProtocolMessageType('BytesNone', (_message.Message,), {
  'DESCRIPTOR' : _BYTESNONE,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesNone)
  })
_sym_db.RegisterMessage(BytesNone)

BytesConst = _reflection.GeneratedProtocolMessageType('BytesConst', (_message.Message,), {
  'DESCRIPTOR' : _BYTESCONST,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesConst)
  })
_sym_db.RegisterMessage(BytesConst)

BytesIn = _reflection.GeneratedProtocolMessageType('BytesIn', (_message.Message,), {
  'DESCRIPTOR' : _BYTESIN,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesIn)
  })
_sym_db.RegisterMessage(BytesIn)

BytesNotIn = _reflection.GeneratedProtocolMessageType('BytesNotIn', (_message.Message,), {
  'DESCRIPTOR' : _BYTESNOTIN,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesNotIn)
  })
_sym_db.RegisterMessage(BytesNotIn)

BytesLen = _reflection.GeneratedProtocolMessageType('BytesLen', (_message.Message,), {
  'DESCRIPTOR' : _BYTESLEN,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesLen)
  })
_sym_db.RegisterMessage(BytesLen)

BytesMinLen = _reflection.GeneratedProtocolMessageType('BytesMinLen', (_message.Message,), {
  'DESCRIPTOR' : _BYTESMINLEN,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesMinLen)
  })
_sym_db.RegisterMessage(BytesMinLen)

BytesMaxLen = _reflection.GeneratedProtocolMessageType('BytesMaxLen', (_message.Message,), {
  'DESCRIPTOR' : _BYTESMAXLEN,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesMaxLen)
  })
_sym_db.RegisterMessage(BytesMaxLen)

BytesMinMaxLen = _reflection.GeneratedProtocolMessageType('BytesMinMaxLen', (_message.Message,), {
  'DESCRIPTOR' : _BYTESMINMAXLEN,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesMinMaxLen)
  })
_sym_db.RegisterMessage(BytesMinMaxLen)

BytesEqualMinMaxLen = _reflection.GeneratedProtocolMessageType('BytesEqualMinMaxLen', (_message.Message,), {
  'DESCRIPTOR' : _BYTESEQUALMINMAXLEN,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesEqualMinMaxLen)
  })
_sym_db.RegisterMessage(BytesEqualMinMaxLen)

BytesPattern = _reflection.GeneratedProtocolMessageType('BytesPattern', (_message.Message,), {
  'DESCRIPTOR' : _BYTESPATTERN,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesPattern)
  })
_sym_db.RegisterMessage(BytesPattern)

BytesPrefix = _reflection.GeneratedProtocolMessageType('BytesPrefix', (_message.Message,), {
  'DESCRIPTOR' : _BYTESPREFIX,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesPrefix)
  })
_sym_db.RegisterMessage(BytesPrefix)

BytesContains = _reflection.GeneratedProtocolMessageType('BytesContains', (_message.Message,), {
  'DESCRIPTOR' : _BYTESCONTAINS,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesContains)
  })
_sym_db.RegisterMessage(BytesContains)

BytesSuffix = _reflection.GeneratedProtocolMessageType('BytesSuffix', (_message.Message,), {
  'DESCRIPTOR' : _BYTESSUFFIX,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesSuffix)
  })
_sym_db.RegisterMessage(BytesSuffix)

BytesIP = _reflection.GeneratedProtocolMessageType('BytesIP', (_message.Message,), {
  'DESCRIPTOR' : _BYTESIP,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesIP)
  })
_sym_db.RegisterMessage(BytesIP)

BytesIPv4 = _reflection.GeneratedProtocolMessageType('BytesIPv4', (_message.Message,), {
  'DESCRIPTOR' : _BYTESIPV4,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesIPv4)
  })
_sym_db.RegisterMessage(BytesIPv4)

BytesIPv6 = _reflection.GeneratedProtocolMessageType('BytesIPv6', (_message.Message,), {
  'DESCRIPTOR' : _BYTESIPV6,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesIPv6)
  })
_sym_db.RegisterMessage(BytesIPv6)

BytesIPv6Ignore = _reflection.GeneratedProtocolMessageType('BytesIPv6Ignore', (_message.Message,), {
  'DESCRIPTOR' : _BYTESIPV6IGNORE,
  '__module__' : 'tests.harness.cases.bytes_pb2'
  # @@protoc_insertion_point(class_scope:tests.harness.cases.BytesIPv6Ignore)
  })
_sym_db.RegisterMessage(BytesIPv6Ignore)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'ZFgithub.com/envoyproxy/protoc-gen-validate/tests/harness/cases/go;cases'
  _BYTESCONST.fields_by_name['val']._options = None
  _BYTESCONST.fields_by_name['val']._serialized_options = b'\372B\007z\005\n\003foo'
  _BYTESIN.fields_by_name['val']._options = None
  _BYTESIN.fields_by_name['val']._serialized_options = b'\372B\014z\nB\003barB\003baz'
  _BYTESNOTIN.fields_by_name['val']._options = None
  _BYTESNOTIN.fields_by_name['val']._serialized_options = b'\372B\016z\014J\004fizzJ\004buzz'
  _BYTESLEN.fields_by_name['val']._options = None
  _BYTESLEN.fields_by_name['val']._serialized_options = b'\372B\004z\002h\003'
  _BYTESMINLEN.fields_by_name['val']._options = None
  _BYTESMINLEN.fields_by_name['val']._serialized_options = b'\372B\004z\002\020\003'
  _BYTESMAXLEN.fields_by_name['val']._options = None
  _BYTESMAXLEN.fields_by_name['val']._serialized_options = b'\372B\004z\002\030\005'
  _BYTESMINMAXLEN.fields_by_name['val']._options = None
  _BYTESMINMAXLEN.fields_by_name['val']._serialized_options = b'\372B\006z\004\020\003\030\005'
  _BYTESEQUALMINMAXLEN.fields_by_name['val']._options = None
  _BYTESEQUALMINMAXLEN.fields_by_name['val']._serialized_options = b'\372B\006z\004\020\005\030\005'
  _BYTESPATTERN.fields_by_name['val']._options = None
  _BYTESPATTERN.fields_by_name['val']._serialized_options = b'\372B\014z\n\"\010^[\000-\177]+$'
  _BYTESPREFIX.fields_by_name['val']._options = None
  _BYTESPREFIX.fields_by_name['val']._serialized_options = b'\372B\005z\003*\001\231'
  _BYTESCONTAINS.fields_by_name['val']._options = None
  _BYTESCONTAINS.fields_by_name['val']._serialized_options = b'\372B\007z\005:\003bar'
  _BYTESSUFFIX.fields_by_name['val']._options = None
  _BYTESSUFFIX.fields_by_name['val']._serialized_options = b'\372B\010z\0062\004buzz'
  _BYTESIP.fields_by_name['val']._options = None
  _BYTESIP.fields_by_name['val']._serialized_options = b'\372B\004z\002P\001'
  _BYTESIPV4.fields_by_name['val']._options = None
  _BYTESIPV4.fields_by_name['val']._serialized_options = b'\372B\004z\002X\001'
  _BYTESIPV6.fields_by_name['val']._options = None
  _BYTESIPV6.fields_by_name['val']._serialized_options = b'\372B\004z\002`\001'
  _BYTESIPV6IGNORE.fields_by_name['val']._options = None
  _BYTESIPV6IGNORE.fields_by_name['val']._serialized_options = b'\372B\006z\004`\001p\001'
  _BYTESNONE._serialized_start=81
  _BYTESNONE._serialized_end=105
  _BYTESCONST._serialized_start=107
  _BYTESCONST._serialized_end=144
  _BYTESIN._serialized_start=146
  _BYTESIN._serialized_end=185
  _BYTESNOTIN._serialized_start=187
  _BYTESNOTIN._serialized_end=231
  _BYTESLEN._serialized_start=233
  _BYTESLEN._serialized_end=265
  _BYTESMINLEN._serialized_start=267
  _BYTESMINLEN._serialized_end=302
  _BYTESMAXLEN._serialized_start=304
  _BYTESMAXLEN._serialized_end=339
  _BYTESMINMAXLEN._serialized_start=341
  _BYTESMINMAXLEN._serialized_end=381
  _BYTESEQUALMINMAXLEN._serialized_start=383
  _BYTESEQUALMINMAXLEN._serialized_end=428
  _BYTESPATTERN._serialized_start=430
  _BYTESPATTERN._serialized_end=474
  _BYTESPREFIX._serialized_start=476
  _BYTESPREFIX._serialized_end=512
  _BYTESCONTAINS._serialized_start=514
  _BYTESCONTAINS._serialized_end=554
  _BYTESSUFFIX._serialized_start=556
  _BYTESSUFFIX._serialized_end=595
  _BYTESIP._serialized_start=597
  _BYTESIP._serialized_end=628
  _BYTESIPV4._serialized_start=630
  _BYTESIPV4._serialized_end=663
  _BYTESIPV6._serialized_start=665
  _BYTESIPV6._serialized_end=698
  _BYTESIPV6IGNORE._serialized_start=700
  _BYTESIPV6IGNORE._serialized_end=741
# @@protoc_insertion_point(module_scope)
